{"version":3,"sources":["registerServiceWorker.js","styles/functions.js","styles/variables.js","styles/global.js","styles/app.js","components/Header/styles.js","components/Header/index.js","routes/Home/HomePanel.js","routes/Home/styles.js","routes/Home/index.js","components/Notice/index.js","components/Button/styles.js","components/Button/index.js","components/Button/Link.js","components/Form/formStyles.js","components/Form/index.js","components/Form/sharedFormStyles.js","routes/Deriv/DerivForm.js","components/Results/resultsStyles.js","components/Results/index.js","components/Results/sharedResultsStyles.js","routes/Deriv/DerivResults.js","routes/Deriv/styles.js","routes/Deriv/index.js","components/Help/styles.js","components/Help/index.js","routes/Deriv/Help/index.js","components/Control/styles.js","components/Control/index.js","components/Control/Side.js","components/Control/Piece.js","routes/Frequen/FrequenForm.js","routes/Frequen/FrequenResults.js","tools/fileProcessor/index.js","routes/Frequen/defaultData.js","routes/Frequen/FrequenService.js","routes/Frequen/styles.js","routes/Frequen/index.js","routes/Frequen/Help/index.js","routes/Gen/defaultData.js","routes/Gen/GenForm.js","routes/Gen/GenResults.js","routes/Gen/GenService.js","routes/Gen/styles.js","routes/Gen/index.js","routes/Gen/Help/index.js","routes/Morph/MorphForm.js","routes/Morph/MorphResults.js","routes/Morph/styles.js","routes/Morph/index.js","routes/Morph/Help/index.js","routes/Tree/TreeForm.js","routes/Tree/TreeResults.js","routes/Tree/styles.js","routes/Tree/index.js","routes/Tree/Help/index.js","components/Main/styles.js","components/Main/index.js","components/Footer/styles.js","components/Footer/index.js","App.js","Router.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","toast","warn","autoClose","className","bodyClassName","progressClassName","console","log","success","catch","error","complement","color","rotate","isHighKeyValue","hue","isHighestKeyValue","harmoniousMix","colMix","base","mix","mixNeutral","mainFont","headerFont","ms0","Math","pow","ms2","ms3","ms4","ms5","ms6","lnht","bluPmy","Color","ongPmy","redPmy","blu","darken","ong","red","bluNtl","ongNtl","redNtl","white","grayscale","lightness","black","styles","@global","*","boxSizing","body","margin","padding","paddingLeft","fontFamily","v","fontSize","concat","lineHeight","backgroundColor","string","fontKerning","fontVariantLigatures","fontFeatureSettings","h1, h2, h3, h4, h5, h6","textRendering","top","right","bottom","left","h1, h2","marginTop","h1","h2","h3","h4","h5","h6","p","a","&:link, &:visited, &:hover, &:active","textDecoration","TextDecorationSkipInk","&:link, &:visited","&:hover","&:active","&.active","&:focus","outline","width","style","alpha","input","height","&[type=checkbox], &[type=radio]","verticalAlign","button","cursor","border","background","borderRadius","boxShadow","inset","x","y","blur","spread","select, optgroup, textarea","select","code, kbd, samp, var","lighten",".toast-update, .toast-unsaved, .toast-unopened",".toast-cached, .toast-opened",".toast-offline","app","maxWidth","marginLeft","marginRight","header","display","justifyContent","alignItems","borderBottom","& a, & a:link, & a:visited, & a:hover, & a:active","titleArea","order","siteTitle","marginBottom","titleLink","siteSubtitle","fontStyle","nav","flexGrow","menu","textAlign","navLink","disabled","opacity","injectSheet","props","react_default","createElement","classes","Link","to","NavLink","activeClassName","classNames","HomePanel","linkTo","panel","toolTitle","toolDescription","children","grid","flexWrap","& p","home","siteDescription","Home_HomePanel","notice","btn","fontWeight","neutral","danger","buttonLink","float","small","ver","onClick","id","addClass","type","role","withRouter","components_Button","buttonType","e","preventDefault","history","push","route","form","& input","& textarea","& select, input","& select","& label","sectionTitle","part","hidden","sharedFormStyles","components_Form","results","paddingTop","borderTop","resultsSection","table","borderCollapse","headerCell","tableBody","paddingBottom","dataCell","borderRight","&:last-child","stats","statsText","sharedResultsStyles","components_Results","deriv","Helmet","name","content","rel","href","canonical","Button_Link","components_Notice","Deriv_DerivForm","Deriv_DerivResults","help","link","DerivHelp","components_Help","control","flexDirection","alignContent","controlLeft","controlRight","controlPiece","addedClasses","side","filePicker","React","createRef","corpus","corpusInput","value","onChange","onChangeInput","consonants","vowels","components_Control","Side","Piece","onAnalyze","checked","distinguishCase","current","click","ref","FrequenResults","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","twoDecimals","whichData","headerCells","dataRows","target","val","setState","prevState","defineProperty","num","round","toFixed","filter","all","_this2","data","prop","hasOwnProperty","count","forEach","el","total","filterData","newData","map","d","i","key","_this3","allData","JSON","parse","stringify","sort","b","findPercent","arr","j","length","seg","dataRow","axisStyle","text","fill","line","stroke","gridStyle","analyzed","barChart","es","yType","onMouseLeave","onMouseOut","tickFormat","t","orientation","animation","colorType","onValueMouseOver","onMouseOver","hovered","dataTable","tableHead","headerRow","Component","fileProcessor","filename","file","File","saveAs","callback","reader","FileReader","onload","result","readAsText","defData","undefined","frequenService","FrequenService","storage","localStorage","item","getData","setStorage","analyze","save","open","Storage","getItem","setItem","splitBySlash","newArr","Array","from","Set","split","indexOf","splice","makeSubArrays","flattenArrays","_ref","apply","toConsumableArray","toLowerCase","sortArrays","consonantsFlat","vowelsFlat","rawResults","initResults","labelAllophones","elArr","allophoneOf","fullArr","slice","assembleData","resArr","segment","elObj","saveFile","info","response","openFile","endsWith","resultSchema","schema","String","Number","DataSchema","?results","of","?hovered","errors","Frequen","tagName","files","datapoint","frequen","Frequen_FrequenForm","Frequen_FrequenResults","FrequenHelp","subpatterns","selected","subpattern","pattern","words","newline","filterdupes","vars","selectOptions","variab","index","subpatternRows","subpsRow","change","subpatternInput","clearButton","addingRow","addButton","patternInput","htmlFor","min","max","wordsInput","toLocaleString","maxWords","filteredWords","filtered","remainingWords","remaining","output","status","includes","filterResults","filterDupes","joinedResults","prototype","join","newLine","trim","outText","outputText","genService","GenService","changeSelect","changeSubpattern","clear","add","changePattern","wordNumChange","changeNewline","changeDupes","checkErrors","generate","build","toUse","used","idDeps","deps","checkCirc","refed","sp","getSp","circ","duplicates","dupes","defed","undefed","undefSet","undefs","chooseRand","floor","random","resolveVar","letter","getSubpattern","selection","resolveOpt","option","letters","test","pattArr","word","patt","optCount","addCount","multCount","k","SubpatternSchema","parseInt","duplicate","whiteSpace","search","thisLen","Gen_this","substring","Gen","which","gen","Gen_GenForm","Gen_GenResults","GenHelp","morph","Morph_MorphForm","Morph_MorphResults","MorphHelp","tree","Tree_TreeForm","Tree_TreeResults","TreeHelp","main","minHeight","Switch","Route","path","component","Deriv","Morph","Tree","Home","lib","draggablePercent","position","POSITION","BOTTOM_CENTER","transition","Flip","footer","appGhURL","copyright","Date","getFullYear","toString","getCopyrightYear","links","charSet","defer","src","integrity","crossOrigin","components_Header","components_Main","components_Footer","BrowserRouter","basename","src_App","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","src_Router","render","URL","process","origin","addEventListener","fetch","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.832dff95.chunk.js","sourcesContent":["import { toast } from 'react-toastify'\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          toast.info('Langua is up-to-date and loading from your cache.', {\n            autoClose: 3000,\n            className: 'toast-cached',\n            bodyClassName: 'toast-cached-body',\n            progressClassName: 'toast-cached-progress'\n          })\n          // eslint-disable-next-line\n          console.log(\n            'This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              toast.warn(\n                'An update is available; please refresh the page to load it.',\n                {\n                  autoClose: false,\n                  className: 'toast-update',\n                  bodyClassName: 'toast-update-body',\n                  progressClassName: 'toast-update-progress'\n                }\n              )\n              // eslint-disable-next-line\n              console.log(\n                'An update is available; please refresh the page to load it.'\n              )\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              toast.success(\n                'Langua has been successfully cached. You can now use it offline.',\n                {\n                  autoClose: 5000,\n                  className: 'toast-cached',\n                  bodyClassName: 'toast-cached-body',\n                  progressClassName: 'toast-cached-progress'\n                }\n              )\n              // eslint-disable-next-line\n              console.log(\n                'Langua has been successfully cached. You can now use it offline.'\n              )\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      // eslint-disable-next-line\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window\n    .fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      toast.info(\n        'No internet connection found; Langua is running in offline mode.',\n        {\n          autoClose: 5000,\n          className: 'toast-offline',\n          bodyClassName: 'toast-offline-body',\n          progressClassName: 'toast-offline-progress'\n        }\n      )\n      // eslint-disable-next-line\n      console.log(\n        'No internet connection found; Langua is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// Colors based on https://tallys.github.io/color-theory/\n\nexport const complement = color => {\n  return color.rotate(180)\n}\n\nconst isCoolColor = color => {\n  return color.hue() < 310 && color.hue() > 140\n}\n\nconst isHighKeyValue = color => {\n  return color.hue() > 20 && color.hue() < 190\n}\n\nconst isHighestKeyValue = color => {\n  return color.hue() > 30 && color.hue() < 90\n}\n\nexport const harmoniousMix = (colMix, base) => {\n  if (isCoolColor(colMix)) {\n    if (isHighKeyValue(base)) {\n      return base.mix(colMix, 0.11)\n    } else {\n      return base.mix(colMix, 0.16)\n    }\n  } else {\n    if (isHighKeyValue(base)) {\n      return base.mix(colMix, 0.13)\n    } else {\n      return base.mix(colMix, 0.23)\n    }\n  }\n}\n\nexport const mixNeutral = color => {\n  if (isHighestKeyValue(color)) {\n    if (isHighKeyValue(color)) {\n      return color.mix(complement(color), 0.19)\n    } else {\n      return color.mix(complement(color), 0.13)\n    }\n  } else if (isHighKeyValue(color)) {\n    if (isHighKeyValue(complement(color))) {\n      return color.mix(complement(color), 0.31)\n    } else {\n      return color.mix(complement(color), 0.23)\n    }\n  } else {\n    if (isHighestKeyValue(complement(color))) {\n      return color.mix(complement(color), 0.31)\n    } else if (isHighKeyValue(complement(color))) {\n      return color.mix(complement(color), 0.26)\n    } else {\n      return color.mix(complement(color), 0.23)\n    }\n  }\n}\n\nexport const pickContrastOf = color => {\n  let newColor = complement(color)\n  if (color.lightness() < 0.3) {\n    newColor.lightness(newColor.lightness() + 0.86)\n  } else if (color.lightness() > 0.7) {\n    newColor.lightness(newColor.lightness() - 0.68)\n  } else {\n    if (isHighKeyValue(color)) {\n      newColor.lightness(newColor.lightness() - 0.53)\n    } else {\n      newColor.lightness(newColor.lightness() + 0.53)\n    }\n  }\n  return newColor\n}\n","import Color from 'color'\nimport { harmoniousMix, mixNeutral } from './functions'\n\nexport const mainFont = '\"Noto Sans\", Helvetica, Arial, sans-serif'\nexport const headerFont = '\"Noto Serif\", \"Palatino Linotype\", Palatino, serif'\n\n/*\n * Modular Scale\n * https://alistapart.com/article/more-meaningful-typography\n * 1rem @ 1:1.333\n * 1.1665rem @ 1:1.333\n * http://www.modularscale.com/?1,1.1665&em&1.333\n */\n\n// All sizes are given as pure numbers, so must be given the unit 'rem'\n\nexport const ratio = 1.333\nexport const ms1 = 1.0\nexport const ms0 = ms1 / Math.pow(ratio, 1) // 0.750\nexport const ms2 = ms1 * Math.pow(ratio, 1) // 1.333\nexport const ms3 = ms1 * Math.pow(ratio, 2) // 1.777\nexport const ms4 = ms1 * Math.pow(ratio, 3) // 2.369\nexport const ms5 = ms1 * Math.pow(ratio, 4) // 3.157\nexport const ms6 = ms1 * Math.pow(ratio, 5) // 4.209\nexport const lnht = ms2 / 2 //                 0.6665\n\n// Colors based on https://tallys.github.io/color-theory/\n\nconst bluPmy = Color('hsl(196, 100%, 50%)')\nconst ongPmy = Color('hsl(36, 100%, 50%)')\nconst redPmy = Color('hsl(0, 100%, 50%)')\n\nexport const blu = harmoniousMix(ongPmy, bluPmy).darken(0.2)\nexport const ong = harmoniousMix(bluPmy, ongPmy)\nexport const red = harmoniousMix(bluPmy, redPmy)\nexport const bluNtl = mixNeutral(blu)\nexport const ongNtl = mixNeutral(ong)\nexport const redNtl = mixNeutral(red)\nexport const white = bluNtl.grayscale().lightness(99)\nexport const black = bluNtl.grayscale().lightness(4)\n","import * as v from './variables'\n\nconst styles = {\n  '@global': {\n    '*': {\n      boxSizing: 'border-box'\n    },\n    body: {\n      margin: 0,\n      padding: 0,\n      paddingLeft: 'calc(100vw - 100%)',\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      lineHeight: v.lnht * 2,\n      backgroundColor: v.white.string(),\n      color: v.black.string(),\n      fontKerning: 'normal',\n      fontVariantLigatures: 'common-ligatures contextual',\n      fontFeatureSettings: ['\"kern\" 1', '\"liga\" 1', '\"clig\" 1', '\"calt\" 1']\n    },\n    'h1, h2, h3, h4, h5, h6': {\n      fontFamily: v.headerFont,\n      textRendering: 'optimizeLegibility',\n      margin: {\n        top: `${v.lnht * 2 * (v.ms1 * 2)}rem`, // base line height * double base font size\n        right: '0',\n        bottom: `${v.lnht * 2 * v.ms1}rem`, // base line height * font size\n        left: '0'\n      },\n      padding: 0\n    },\n    'h1, h2': {\n      marginTop: 0\n    },\n    h1: {\n      color: v.blu.darken(0.2).string(),\n      fontSize: `${v.ms5}rem`\n    },\n    h2: {\n      color: v.blu.darken(0.1).string(),\n      fontSize: `${v.ms4}rem`\n    },\n    h3: {\n      color: v.blu.darken(0.08).string(),\n      fontSize: `${v.ms3}rem`\n    },\n    h4: {\n      color: v.blu.darken(0.05).string(),\n      fontSize: `${v.ms2}rem`\n    },\n    h5: {\n      color: v.blu.darken(0.02).string(),\n      fontSize: `${v.ms1}rem`\n    },\n    h6: {\n      color: v.blu.string(),\n      fontSize: `${v.ms0}rem`\n    },\n    p: {\n      fontSize: `${v.ms1}rem`,\n      margin: {\n        top: '0',\n        right: '0',\n        bottom: `${v.lnht * 2 * v.ms1}rem`, // base line height * base font size\n        left: '0'\n      },\n      padding: 0\n    },\n    a: {\n      '&:link, &:visited, &:hover, &:active': {\n        textDecoration: 'underline',\n        TextDecorationSkipInk: 'auto'\n      },\n      '&:link, &:visited': {\n        color: v.blu.string()\n      },\n      '&:hover': {\n        color: v.blu.darken(0.15).string()\n      },\n      '&:active': {\n        color: v.ong.string()\n      },\n      '&.active': {\n        '&:link, &:visited': {\n          color: v.ong.string()\n        },\n        '&:hover': {\n          color: v.ong.darken(0.15).string()\n        },\n        '&:active': {\n          color: v.ong.darken(0.25).string()\n        }\n      },\n      '&:focus': {\n        outline: {\n          width: 1,\n          style: 'solid',\n          color: v.blu\n            .darken(0.15)\n            .alpha(0.3)\n            .string()\n        }\n      }\n    },\n    input: {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      boxSizing: 'border-box',\n      height: `${3 * v.lnht}rem`,\n      '&:focus': {\n        outline: {\n          width: 1,\n          style: 'solid',\n          color: v.blu\n            .darken(0.15)\n            .alpha(0.3)\n            .string()\n        }\n      },\n      '&[type=checkbox], &[type=radio]': {\n        height: 'inherit',\n        verticalAlign: 'baseline'\n      }\n    },\n    button: {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      cursor: 'pointer',\n      border: {\n        width: '1px',\n        style: 'solid',\n        color: v.blu\n          .darken(0.15)\n          .alpha(0.3)\n          .string()\n      },\n      background: 'none',\n      backgroundColor: v.white.darken(0.05).string(),\n      padding: `${v.lnht}rem`,\n      borderRadius: '3px',\n      '&:hover': {\n        backgroundColor: v.white.darken(0.1).string()\n      },\n      '&:active': {\n        backgroundColor: v.white.darken(0.15).string(),\n        boxShadow: {\n          inset: 'inset',\n          x: 0,\n          y: 0,\n          blur: `${v.lnht}rem`,\n          spread: null,\n          color: v.white.darken(0.25).string()\n        }\n      },\n      '&:focus': {\n        outline: {\n          width: 1,\n          style: 'solid',\n          color: v.blu\n            .darken(0.15)\n            .alpha(0.3)\n            .string()\n        }\n      }\n    },\n    'select, optgroup, textarea': {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`\n    },\n    select: {\n      height: `${3 * v.lnht}rem`\n    },\n    'code, kbd, samp, var': {\n      fontFamily: 'monospace, monospace',\n      backgroundColor: v.white.darken(0.1).string(),\n      color: v.black.lighten(5).string(),\n      padding: {\n        top: `${v.lnht / 7}rem`,\n        right: `${v.lnht / 2}rem`,\n        bottom: `${v.lnht / 7}rem`,\n        left: `${v.lnht / 2}rem`\n      }\n    },\n    '.toast-update, .toast-unsaved, .toast-unopened': {\n      backgroundColor: v.red\n        .darken(0.1)\n        .alpha(0.9)\n        .string()\n    },\n    '.toast-cached, .toast-opened': {\n      backgroundColor: v.blu\n        .darken(0.1)\n        .alpha(0.9)\n        .string()\n    },\n    '.toast-offline': {\n      backgroundColor: v.ong\n        .darken(0.1)\n        .alpha(0.9)\n        .string()\n    }\n  }\n}\n\nexport default styles\n","import * as v from './variables'\n\nconst styles = {\n  app: {\n    width: `${v.ms1 * Math.pow(v.ratio, 15)}rem`, // 74.551rem; 1192.8px\n    maxWidth: '92%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n}\n\nexport default styles\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    borderBottom: {\n      width: '1px',\n      style: 'solid',\n      color: v.blu.darken(0.15).string()\n    },\n    padding: {\n      top: `${2 * v.lnht}rem`,\n      right: 0,\n      bottom: `${2 * v.lnht}rem`,\n      left: 0\n    },\n    '& a, & a:link, & a:visited, & a:hover, & a:active': {\n      textDecoration: 'none'\n    }\n  },\n  titleArea: {\n    order: 0\n  },\n  siteTitle: {\n    marginBottom: `${v.lnht}rem`\n  },\n  titleLink: {\n    '&:link, &:visited, &:hover, &:active': {\n      color: v.blu.darken(0.3).string()\n    }\n  },\n  siteSubtitle: {\n    fontStyle: 'italic'\n  },\n  nav: {\n    order: 1,\n    flexGrow: 1\n  },\n  menu: {\n    textAlign: 'right',\n    fontFamily: v.headerFont\n  },\n  navLink: {\n    display: 'inline-block',\n    margin: [[0, `${v.lnht * 2}rem`]],\n    padding: 0,\n    fontSize: `${v.ms2}rem`,\n    lineHeight: `${v.lnht * 2}rem`\n  },\n  disabled: {\n    opacity: 0.5,\n    '&:hover': {\n      opacity: 0.8\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst siteTitle = 'Langua'\nconst siteSubtitle = 'A suite of language tools'\n\nconst Header = props => (\n  <header>\n    <div className={props.classes.header}>\n      <div className={props.classes.titleArea}>\n        <h1 className={props.classes.siteTitle}>\n          <Link to='/' className={props.classes.titleLink}>\n            {siteTitle}\n          </Link>\n        </h1>\n        <p className={props.classes.siteSubtitle}>{siteSubtitle}</p>\n      </div>\n      <nav className={props.classes.nav}>\n        <ul className={props.classes.menu}>\n          <li className={props.classes.navLink}>\n            <NavLink to='/gen' activeClassName='active'>\n              Gen\n            </NavLink>\n          </li>\n          <li\n            className={classNames(\n              props.classes.navLink,\n              props.classes.disabled\n            )}\n          >\n            <NavLink to='/morph' activeClassName='active'>\n              Morph\n            </NavLink>\n          </li>\n          <li\n            className={classNames(\n              props.classes.navLink,\n              props.classes.disabled\n            )}\n          >\n            <NavLink to='/deriv' activeClassName='active'>\n              Deriv\n            </NavLink>\n          </li>\n          <li className={props.classes.navLink}>\n            <NavLink to='/frequen' activeClassName='active'>\n              Frequen\n            </NavLink>\n          </li>\n          <li\n            className={classNames(\n              props.classes.navLink,\n              props.classes.disabled\n            )}\n          >\n            <NavLink to='/tree' activeClassName='active'>\n              Tree\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Header)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nconst HomePanel = props => (\n  <Link\n    to={props.linkTo}\n    className={\n      props.disabled\n        ? classNames(props.classes.panel, props.classes.disabled)\n        : props.classes.panel\n    }\n  >\n    <h2 className={props.classes.toolTitle}>{props.toolTitle}</h2>\n    <p className={props.classes.toolDescription}>{props.children}</p>\n  </Link>\n)\n\nHomePanel.propTypes = {\n  classes: PropTypes.object,\n  linkTo: PropTypes.string.isRequired,\n  toolTitle: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  disabled: PropTypes.bool\n}\n\nexport default HomePanel\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  grid: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    flexWrap: 'wrap'\n  },\n  panel: {\n    '&:link, &:visited, &:hover, &:active': {\n      color: v.black.string(),\n      width: '49%',\n      marginBottom: `${v.lnht}rem`,\n      padding: `${v.ms0}rem`,\n      textDecoration: 'none',\n      boxSizing: 'border-box'\n    },\n    '&:hover': {\n      outline: {\n        width: '1px',\n        style: 'solid',\n        color: v.blu\n          .darken(0.15)\n          .alpha(0.3)\n          .string()\n      }\n    }\n  },\n  disabled: {\n    opacity: 0.5,\n    '&:hover': {\n      opacity: 0.8\n    },\n    '& p': {\n      fontStyle: 'italic'\n    }\n  },\n  toolDescription: {\n    margin: 0\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport HomePanel from './HomePanel'\nimport styles from './styles'\n\nconst Home = props => (\n  <div className={props.classes.home}>\n    <p className={props.classes.siteDescription}>\n      Langua is a suite of language tools that can be used for testing,\n      experimentation, learning, analysis, or creation.\n    </p>\n    <div className={props.classes.grid}>\n      <HomePanel classes={props.classes} linkTo='/gen' toolTitle='Gen'>\n        LanguaGen is a tool for automatically building a set of words based on\n        arbitrary rules of phonotactics. This can be used to create a dummy\n        vocabulary for linguistic experimentation, to generate words or names\n        for a naming language in a work of fantasy or science fiction, or as the\n        basis for building the vocabulary of a constructed language.\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo='/morph'\n        toolTitle='Morph'\n        disabled\n      >\n        LanguaMorph is a tool for modeling historical sound change according to\n        arbitrary rules of phonetic change. It can also be used to reverse\n        historical sound change according to those same rules in order to guess\n        at a word&rsquo;s proto-language roots.\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo='/deriv'\n        toolTitle='Deriv'\n        disabled\n      >\n        LanguaDeriv is a tool for modeling word derivation according to\n        arbitrary rules of morphosyntactics.\n      </HomePanel>\n      <HomePanel classes={props.classes} linkTo='/frequen' toolTitle='Frequen'>\n        LanguaFrequen is a tool for analyzing phoneme frequencies in a given\n        text.\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo='/tree'\n        toolTitle='Tree'\n        disabled\n      >\n        LanguaTree is a tool for drawing and labeling syntax trees.\n      </HomePanel>\n    </div>\n    <p className={props.classes.siteDescription}>\n      Langua is a full Progressive Web App; once the site has been loaded, its\n      full functionality is available even offline. Langua can also be added to\n      the homescreen of your tablet or mobile device for easy access.\n    </p>\n  </div>\n)\n\nHome.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Home)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  notice: {\n    fontStyle: 'italic'\n  }\n}\n\nconst Notice = props => <p className={props.classes.notice}>{props.children}</p>\n\nNotice.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.string\n}\n\nexport default injectSheet(styles)(Notice)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  btn: {\n    border: {\n      width: 1,\n      style: 'solid',\n      color: v.blu\n        .darken(0.6)\n        .alpha(0.3)\n        .string()\n    },\n    background: 'none',\n    backgroundColor: v.white.darken(0.05).string(),\n    color: v.blu.string(),\n    fontWeight: 'bold',\n    padding: `${v.lnht}rem`,\n    borderRadius: 3,\n    '&:hover': {\n      backgroundColor: v.white.darken(0.1).string(),\n      color: v.blu.darken(0.15).string()\n    },\n    '&:active': {\n      backgroundColor: v.white.darken(0.2).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.white.darken(0.3).string()\n      },\n      color: v.ong.string()\n    }\n  },\n  neutral: {\n    color: v.white.string(),\n    backgroundColor: v.ong.darken(0.15).string(),\n    border: {\n      width: 1,\n      style: 'solid',\n      color: v.ong\n        .darken(0.7)\n        .alpha(0.3)\n        .string()\n    },\n    '&:hover': {\n      backgroundColor: v.ong.darken(0.25).string(),\n      color: v.white.string()\n    },\n    '&:active': {\n      backgroundColor: v.ongNtl.darken(0.25).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.ongNtl.darken(0.35).string()\n      },\n      color: v.white.string()\n    }\n  },\n  success: {\n    color: v.white.string(),\n    backgroundColor: v.blu.string(),\n    '&:hover': {\n      backgroundColor: v.blu.darken(0.1).string(),\n      color: v.white.string()\n    },\n    '&:active': {\n      backgroundColor: v.bluNtl.darken(0.1).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.bluNtl.darken(0.2).string()\n      },\n      color: v.white.string()\n    }\n  },\n  danger: {\n    color: v.white.string(),\n    backgroundColor: v.red.darken(0.1).string(),\n    border: {\n      width: 1,\n      style: 'solid',\n      color: v.red\n        .darken(0.65)\n        .alpha(0.3)\n        .string()\n    },\n    '&:hover': {\n      backgroundColor: v.red.darken(0.2).string(),\n      color: v.white.string()\n    },\n    '&:active': {\n      backgroundColor: v.redNtl.darken(0.2).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.redNtl.darken(0.3).string()\n      },\n      color: v.white.string()\n    }\n  },\n  buttonLink: {\n    float: 'right'\n  },\n  small: {\n    fontSize: `${v.ms0}rem`,\n    padding: `${v.ms1 / 2}rem`\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst Button = props => {\n  const filterClass = (ver, classes) => {\n    if (ver === 'neutral') {\n      return classes.neutral\n    } else if (ver === 'success') {\n      return classes.success\n    } else if (ver === 'danger') {\n      return classes.danger\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <button\n      onClick={props.onClick}\n      id={props.id}\n      className={classNames(\n        props.classes.btn,\n        filterClass(props.ver, props.classes),\n        props.classes[props.addClass]\n      )}\n      type={props.type || 'button'}\n      role={props.role || 'button'}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  ver: PropTypes.oneOf(['neutral', 'success', 'danger']),\n  onClick: PropTypes.func,\n  id: PropTypes.string,\n  addClass: PropTypes.string,\n  type: PropTypes.string,\n  role: PropTypes.string,\n  classes: PropTypes.object,\n  children: PropTypes.string\n}\n\nexport default injectSheet(styles)(Button)\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport PropTypes from 'prop-types'\n\nimport Button from '.'\n\nconst ButtonLink = props => {\n  const onClick = e => {\n    e.preventDefault()\n    props.history.push(props.route)\n  }\n\n  return (\n    <Button\n      ver={props.buttonType}\n      addClass={'buttonLink'}\n      onClick={onClick}\n      role='link'\n    >\n      {props.children}\n    </Button>\n  )\n}\n\nButtonLink.propTypes = {\n  buttonType: PropTypes.string,\n  children: PropTypes.string,\n  history: PropTypes.object,\n  route: PropTypes.string\n}\n\nexport default withRouter(ButtonLink)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  form: {\n    '& input': {\n      flexGrow: 1\n    },\n    '& textarea': {\n      flexGrow: 1\n    },\n    '& select, input': {\n      padding: 1,\n      margin: 1\n    },\n    '& select': {\n      textAlign: 'center'\n    },\n    '& label': {\n      marginLeft: `${v.lnht}rem`,\n      marginRight: `${v.lnht}rem`,\n      verticalAlign: 'middle'\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './formStyles'\n\nconst Form = props => (\n  <form className={props.classes.form}>{props.children}</form>\n)\n\nForm.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Form)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  sectionTitle: {\n    margin: 0\n  },\n  part: {\n    marginTop: `${v.lnht}rem`\n  },\n  hidden: {\n    display: 'none'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\n\nconst DerivForm = props => <Form />\n\nDerivForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedFormStyles)(DerivForm)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  results: {\n    marginTop: `${v.lnht}rem`,\n    paddingTop: `${v.lnht}rem`,\n    borderTop: {\n      width: 1,\n      style: 'dotted',\n      color: v.bluNtl.string()\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './resultsStyles'\n\nconst Results = props => (\n  <div className={props.classes.results}>{props.children}</div>\n)\n\nResults.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Results)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  resultsSection: {\n    marginTop: `${v.ms2}rem`,\n    marginBottom: `${v.ms2}rem`\n  },\n  error: {\n    color: v.red.string()\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    border: {\n      width: 1,\n      style: 'dotted',\n      color: v.ong.string()\n    }\n  },\n  headerCell: {\n    padding: `${v.lnht}rem`,\n    textAlign: 'center',\n    backgroundColor: v.ong.string(),\n    borderBottom: {\n      width: 1,\n      style: 'dotted',\n      color: v.ong.string()\n    }\n  },\n  tableBody: {\n    paddingTop: `${v.lnht}rem`,\n    paddingBottom: `${v.lnht}rem`\n  },\n  dataCell: {\n    borderRight: {\n      width: 1,\n      style: 'dotted',\n      color: v.ong.string()\n    },\n    '&:last-child': {\n      borderRight: 'none'\n    },\n    padding: {\n      top: 0,\n      right: `${v.lnht}rem`,\n      bottom: 0,\n      left: `${v.lnht}rem`\n    },\n    textAlign: 'center'\n  },\n  stats: {\n    paddingTop: `${v.lnht}rem`,\n    borderTop: {\n      width: 1,\n      style: 'dotted',\n      color: v.bluNtl.string()\n    }\n  },\n  statsText: {\n    fontSize: `${v.ms0}rem`,\n    fontStyle: 'italic'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst DerivResults = props => <Results />\n\nDerivResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedResultsStyles)(DerivResults)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Notice from '../../components/Notice'\nimport ButtonLink from '../../components/Button/Link'\n\nimport DerivForm from './DerivForm'\nimport DerivResults from './DerivResults'\nimport styles from './styles'\n\nimport { canonical, siteTitle } from '../../App'\n\nconst Deriv = props => (\n  <div className={props.classes.deriv}>\n    <Helmet>\n      <title>{siteTitle} Deriv</title>\n      <meta\n        name='description'\n        content='LanguaDeriv is a tool for modeling word derivation according to arbitrary rules of morphosyntactics.'\n      />\n      <link rel='canonical' href={`${canonical}deriv/`} />\n    </Helmet>\n    <ButtonLink route='/deriv/help'>Help</ButtonLink>\n    <h2 className='toolTitle'>LanguaDeriv</h2>\n    <Notice>This tool is still in planning.</Notice>\n    <DerivForm styles={props.classes} />\n    <DerivResults styles={props.classes} />\n  </div>\n)\n\nDeriv.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Deriv)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\nimport ButtonLink from '../Button/Link'\n\nimport { canonical, siteTitle } from '../../App'\n\nconst Help = props => (\n  <div className={props.classes.help}>\n    <Helmet>\n      <title>\n        {siteTitle} {props.toolTitle} Help\n      </title>\n      <meta name='description' content={props.toolDescription} />\n      <link rel='canonical' href={`${canonical + props.link}/help/`} />\n    </Helmet>\n    <ButtonLink route={`/${props.link}`}>Back</ButtonLink>\n    <h2 className='toolTitle'>{`Langua${props.toolTitle}`} Help</h2>\n    <p id='description'>{props.toolDescription}</p>\n    {props.children}\n  </div>\n)\n\nHelp.propTypes = {\n  classes: PropTypes.object,\n  toolTitle: PropTypes.string.isRequired,\n  toolDescription: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Help)\n","import React from 'react'\n\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nconst toolTitle = 'Deriv'\n\nconst DerivHelp = props => (\n  <Help\n    toolTitle={toolTitle}\n    toolDescription={`Langua${toolTitle} is a tool for modeling word derivation according to arbitrary rules of morphosyntactics.`}\n    link='deriv'\n  >\n    <Notice>This tool is still in planning.</Notice>\n  </Help>\n)\n\nexport default DerivHelp\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  control: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    flexWrap: 'wrap'\n  },\n  controlLeft: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    flexWrap: 'wrap'\n  },\n  controlRight: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between'\n  },\n  controlPiece: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    margin: `${v.lnht}rem`,\n    verticalAlign: 'middle'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst Control = props =>\n  props.addedClasses ? (\n    <div className={classNames(props.classes.control, props.addedClasses)}>\n      {props.children}\n    </div>\n  ) : (\n    <div className={props.classes.control}>{props.children}</div>\n  )\n\nControl.propTypes = {\n  classes: PropTypes.object,\n  addedClasses: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Control)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst ControlSide = props => {\n  if (props.side === 'left') {\n    return props.addedClasses ? (\n      <div\n        className={classNames(props.classes.controlLeft, props.addedClasses)}\n      >\n        {props.children}\n      </div>\n    ) : (\n      <div className={props.classes.controlLeft}>{props.children}</div>\n    )\n  } else {\n    return props.addedClasses ? (\n      <div\n        className={classNames(props.classes.controlRight, props.addedClasses)}\n      >\n        {props.children}\n      </div>\n    ) : (\n      <div className={props.classes.controlRight}>{props.children}</div>\n    )\n  }\n}\n\nControlSide.propTypes = {\n  classes: PropTypes.object,\n  side: PropTypes.oneOf(['left', 'right']),\n  addedClasses: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(ControlSide)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst ControlPiece = props =>\n  props.addedClasses ? (\n    <div className={classNames(props.classes.controlPiece, props.addedClasses)}>\n      {props.children}\n    </div>\n  ) : (\n    <div className={props.classes.controlPiece}>{props.children}</div>\n  )\n\nControlPiece.propTypes = {\n  classes: PropTypes.object,\n  addedClasses: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(ControlPiece)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button'\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\nimport Control from '../../components/Control'\nimport ControlSide from '../../components/Control/Side'\nimport ControlPiece from '../../components/Control/Piece'\n\nconst FrequenForm = props => {\n  const filePicker = React.createRef()\n\n  const invokeFilePicker = e => {\n    e.preventDefault()\n    filePicker.current.value = ''\n    filePicker.current.click()\n  }\n\n  return (\n    <Form>\n      <div className={classNames(props.styles.corpus, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Text Corpus</h5>\n        <textarea\n          className={classNames(props.styles.corpusInput, props.styles.input)}\n          id='corpus'\n          name='corpus'\n          value={props.state.corpus}\n          onChange={props.onChangeInput}\n        />\n      </div>\n      <div className={classNames(props.styles.consonants, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Consonants</h5>\n        <input\n          className={props.styles.input}\n          id='consonants'\n          name='consonants'\n          type='text'\n          value={props.state.consonants}\n          onChange={props.onChangeInput}\n        />\n      </div>\n      <div className={classNames(props.styles.vowels, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Vowels</h5>\n        <input\n          className={props.styles.input}\n          id='vowels'\n          name='vowels'\n          type='text'\n          value={props.state.vowels}\n          onChange={props.onChangeInput}\n        />\n      </div>\n      <Control addedClasses={props.classes.part}>\n        <ControlSide side='left'>\n          <ControlPiece>\n            <Button type='submit' ver='neutral' onClick={props.onAnalyze}>\n              Analyze\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <label>\n              <input\n                type='checkbox'\n                id='distinguishCase'\n                name='distinguishCase'\n                value='distinguishCase'\n                checked={props.state.distinguishCase}\n                onChange={props.onChangeInput}\n              />{' '}\n              distinguish upper and lower case\n            </label>\n          </ControlPiece>\n        </ControlSide>\n        <ControlSide side='right'>\n          <ControlPiece>\n            <Button\n              id='save'\n              ver='success'\n              onClick={props.onChangeInput}\n              type='button'\n            >\n              Save\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <Button id='open' onClick={invokeFilePicker} type='button'>\n              Open\n            </Button>\n            <input\n              id='file'\n              name='file'\n              className={props.classes.hidden}\n              type='file'\n              ref={filePicker}\n              onChange={props.onChangeInput}\n            />\n          </ControlPiece>\n        </ControlSide>\n      </Control>\n    </Form>\n  )\n}\n\nFrequenForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  state: PropTypes.object.isRequired,\n  onChangeInput: PropTypes.func.isRequired,\n  onAnalyze: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedFormStyles)(FrequenForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport 'react-vis/dist/style.css'\nimport {\n  FlexibleWidthXYPlot,\n  HorizontalBarSeries,\n  HorizontalGridLines,\n  VerticalGridLines,\n  XAxis,\n  YAxis,\n  Hint\n} from 'react-vis'\nimport PropTypes from 'prop-types'\n\nimport * as v from '../../styles/variables'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\nimport Control from '../../components/Control'\nimport ControlPiece from '../../components/Control/Piece'\n\nclass FrequenResults extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChangeInput = this.onChangeInput.bind(this)\n    this.twoDecimals = this.twoDecimals.bind(this)\n    this.whichData = this.whichData.bind(this)\n    this.headerCells = this.headerCells.bind(this)\n    this.dataRows = this.dataRows.bind(this)\n  }\n\n  onChangeInput (e) {\n    e.preventDefault()\n    const name = e.target.name\n    let val = e.target.val\n    this.setState(prevState => ({\n      [name]: val\n    }))\n  }\n\n  twoDecimals (num) {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  whichData () {\n    switch (this.props.filter) {\n      case 'consonants':\n        return this.props.results.consonants\n      case 'vowels':\n        return this.props.results.vowels\n      default:\n        return this.props.results.all\n    }\n  }\n\n  headerCells () {\n    let data = []\n    for (let prop in this.props.results) {\n      if (this.props.results.hasOwnProperty(prop)) {\n        let count = 0\n\n        this.props.results[prop].forEach(el => {\n          count += el.count\n        })\n\n        data.push({\n          name: prop,\n          total: count\n        })\n      }\n    }\n    const filterData = () => {\n      let newData = {}\n      data.forEach(el => {\n        if (el.name === this.props.filter) {\n          newData = {\n            name: el.name,\n            total: el.total\n          }\n        }\n      })\n      return newData\n    }\n    if (this.props.filter !== 'all') {\n      return (\n        <th className={this.props.classes.headerCell}>\n          {`% of ${filterData().name}`}\n          <br />\n          {`total: ${filterData().total}`}\n        </th>\n      )\n    } else {\n      return data.map((d, i) => (\n        <th className={this.props.classes.headerCell} key={i}>\n          {`% of ${d.name}`}\n          <br />\n          {`total: ${d.total}`}\n        </th>\n      ))\n    }\n  }\n\n  dataRows () {\n    const allData = JSON.parse(JSON.stringify(this.whichData())).sort(\n      (a, b) => {\n        return b.count - a.count\n      }\n    )\n\n    const findPercent = (arr, y) => {\n      let i = -1\n      for (let j = 0; j < arr.length; j++) {\n        if (arr[j].y === y) {\n          i = j\n        }\n      }\n\n      if (i > -1) {\n        return this.twoDecimals(arr[i].x) + '%'\n      } else {\n        return this.twoDecimals(0) + '%'\n      }\n    }\n\n    return allData.map(seg => (\n      <tr className={this.props.classes.dataRow} key={seg.i}>\n        <td className={this.props.classes.dataCell}>{seg.y}</td>\n        <td className={this.props.classes.dataCell}>{seg.count}</td>\n        {this.props.filter === 'all' ? (\n          <td className={this.props.classes.dataCell}>\n            {this.twoDecimals(seg.x) + '%'}\n          </td>\n        ) : null}\n        {this.props.filter === 'all' ? (\n          <td className={this.props.classes.dataCell}>\n            {seg.type === 'consonant'\n              ? findPercent(this.props.results.consonants, seg.y)\n              : null}\n          </td>\n        ) : this.props.filter === 'consonants' ? (\n          <td className={this.props.classes.dataCell}>\n            {this.twoDecimals(seg.x) + '%'}\n          </td>\n        ) : null}\n        {this.props.filter === 'all' ? (\n          <td className={this.props.classes.dataCell}>\n            {seg.type === 'vowel'\n              ? findPercent(this.props.results.vowels, seg.y)\n              : null}\n          </td>\n        ) : this.props.filter === 'vowels' ? (\n          <td className={this.props.classes.dataCell}>\n            {this.twoDecimals(seg.x) + '%'}\n          </td>\n        ) : null}\n      </tr>\n    ))\n  }\n\n  render () {\n    const axisStyle = {\n      fontSize: `${v.ms0}rem`,\n      text: {\n        fill: `${v.black.lighten(9).string()}`\n      },\n      line: {\n        stroke: `${v.black.lighten(20).string()}`\n      }\n    }\n\n    const gridStyle = { stroke: `${v.black.lighten(20).string()}` }\n\n    if (this.props.analyzed) {\n      return (\n        <Results>\n          <Control>\n            <ControlPiece>\n              <select\n                id='filter'\n                name='filter'\n                value={this.props.filter}\n                onChange={this.props.onChangeInput}\n              >\n                <option value='all'>All Segments</option>\n                <option value='consonants'>Consonants</option>\n                <option value='vowels'>Vowels</option>\n              </select>\n            </ControlPiece>\n          </Control>\n          <div\n            className={classNames(\n              this.props.classes.barChart,\n              this.props.classes.resultsSection\n            )}\n          >\n            <FlexibleWidthXYPlot\n              yType='ordinal'\n              height={v.ms2 * 16 * this.whichData().length}\n              margin={{\n                top: v.ms3 * 16,\n                right: v.ms5 * 16,\n                bottom: v.ms3 * 16,\n                left: v.ms5 * 16\n              }}\n              onMouseLeave={this.props.onMouseOut}\n            >\n              <VerticalGridLines style={gridStyle} />\n              <HorizontalGridLines style={gridStyle} />\n              <XAxis\n                tickFormat={t => `${t}%`}\n                style={axisStyle}\n                orientation='top'\n              />\n              <XAxis\n                tickFormat={t => `${t}%`}\n                style={axisStyle}\n                orientation='bottom'\n              />\n              <YAxis style={axisStyle} orientation='left' />\n              <YAxis style={axisStyle} orientation='right' />\n              <HorizontalBarSeries\n                data={this.whichData()}\n                animation\n                colorType='literal'\n                onValueMouseOver={this.props.onMouseOver}\n                onMouseOut={this.props.onMouseOut}\n              />\n              {this.props.hovered ? (\n                <Hint\n                  value={{\n                    [`/${this.props.hovered.y}/ (${\n                      this.props.hovered.type\n                    })`]: `${this.props.hovered.count} (${this.twoDecimals(\n                      this.props.hovered.x\n                    )}%)`\n                  }}\n                />\n              ) : null}\n            </FlexibleWidthXYPlot>\n          </div>\n          <div\n            className={classNames(\n              this.props.classes.dataTable,\n              this.props.classes.resultsSection\n            )}\n          >\n            <table className={this.props.classes.table}>\n              <thead className={this.props.classes.tableHead}>\n                <tr className={this.props.classes.headerRow}>\n                  <th className={this.props.classes.headerCell}>Segment</th>\n                  <th className={this.props.classes.headerCell}>Count</th>\n                  {this.headerCells()}\n                </tr>\n              </thead>\n              <tbody className={this.props.classes.tableBody}>\n                {this.dataRows()}\n              </tbody>\n            </table>\n          </div>\n        </Results>\n      )\n    } else {\n      return <div className={this.props.classes.results} />\n    }\n  }\n}\n\nFrequenResults.propTypes = {\n  classes: PropTypes.object,\n  results: PropTypes.object,\n  hovered: PropTypes.object,\n  filter: PropTypes.string.isRequired,\n  analyzed: PropTypes.bool.isRequired,\n  onChangeInput: PropTypes.func.isRequired,\n  onMouseOver: PropTypes.func.isRequired,\n  onMouseOut: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedResultsStyles)(FrequenResults)\n","import saveAs from 'file-saver'\n\nclass FileProcessor {\n  saveFile (data, type) {\n    let filename = ''\n\n    switch (type) {\n      case 'gen':\n        filename = 'LanguaGen.lngg'\n        break\n      case 'morph':\n        filename = 'LanguaMorph.lngm'\n        break\n      case 'deriv':\n        filename = 'LanguaDeriv.lngd'\n        break\n      case 'frequen':\n        filename = 'LanguaFrequen.lngf'\n        break\n      case 'tree':\n        filename = 'LanguaTree.lngt'\n        break\n      default:\n        filename = 'Langua.lngl'\n    }\n\n    const file = new window.File([JSON.stringify(data, null, 2)], filename, {\n      type: 'application/json'\n    })\n\n    saveAs(file)\n  }\n\n  openFile (file, callback) {\n    const reader = new window.FileReader()\n\n    reader.onload = () => {\n      callback(reader.result)\n    }\n\n    reader.readAsText(file)\n  }\n}\n\nconst fileProcessor = new FileProcessor()\n\nexport default fileProcessor\n","export const defData = {\n  corpus:\n    'Nzɔ de’áxa Tsənaxa, ño lo sɛtsa’ɔk, ño lo de’áxa u Kasaga, ño lo mɛya ayru Tol o Əbe kwə, sa nzɔ xa mpaskale: Steyə rabɛ lu ñire lu mvunə poxe o lu pɛlɔ ah lo mɛwɛ axe, maxə ɔra latsi əbɔwə səyo.',\n  consonants:\n    'b/d/f/g/k/kw/l/m/mp/mv/n/nt/nts/nz/ñ/ŋk/ŋkw/p/r/s/t/ts/v/w/x,h/y/’',\n  vowels: 'a,á/ɛ,ɛ́/e,é/ə,ə́/i,í/ɔ,ɔ́/o,ó/u,ú',\n  distinguishCase: false,\n  analyzed: false,\n  results: undefined,\n  hovered: undefined,\n  filter: 'all'\n}\n","import { toast } from 'react-toastify'\nimport schema from 'js-schema'\n\nimport fileProcessor from '../../tools/fileProcessor'\nimport * as v from '../../styles/variables'\n\nimport { defData } from './defaultData'\n\nclass FrequenService {\n  constructor () {\n    this.storage = window.localStorage\n    this.item = 'frequen'\n    this.getData = this.getData.bind(this)\n    this.setStorage = this.setStorage.bind(this)\n    this.analyze = this.analyze.bind(this)\n    this.save = this.save.bind(this)\n    this.open = this.open.bind(this)\n  }\n\n  getData () {\n    let data\n\n    // Check if there's storage access\n    if (typeof Storage !== 'undefined') {\n      // If we can access storage, check if there is data in storage.\n      if (this.storage.getItem(this.item)) {\n        // If there's data in storage, pull it\n        data = JSON.parse(this.storage.getItem(this.item))\n      } else {\n        // If there's not data in storage, pull the default data\n        data = defData\n        // Store the default data in storage\n        this.setStorage(data)\n      }\n    } else {\n      // If we can't access storage, use the default data\n      data = defData\n    }\n\n    return data\n  }\n\n  // Store the current data in storage\n  setStorage (data) {\n    if (typeof Storage !== 'undefined') {\n      this.storage.setItem(this.item, JSON.stringify(data))\n    }\n  }\n\n  // Analyze the data\n  analyze (data) {\n    // Break the input into arrays and remove duplicates\n    const splitBySlash = arr => {\n      let newArr = Array.from(new Set(arr.split('/')))\n      // Remove any blanks\n      if (newArr.indexOf('') > -1) {\n        newArr.splice(newArr.indexOf(''), 1)\n      }\n      return newArr\n    }\n    // Break each element in an array into a sub-array\n    const makeSubArrays = arr => {\n      let newArr = []\n      arr.forEach(el => {\n        newArr.push(el.split(','))\n      })\n      return newArr\n    }\n    const consonants = makeSubArrays(splitBySlash(data.consonants))\n    const vowels = makeSubArrays(splitBySlash(data.vowels))\n\n    // Flatten arrays and make sure there are no duplicates\n    const flattenArrays = arr => Array.from(new Set([].concat(...arr)))\n    // Distinguish upper/lower case if that option is selected\n    const distinguishCase = arr => {\n      let newArr = []\n      if (!data.distinguishCase) {\n        arr.forEach(el => newArr.push(el.toLowerCase()))\n      } else {\n        newArr = arr\n      }\n      return Array.from(new Set(newArr))\n    }\n    // And sort the flattened arrays by length so the longest segments are first\n    const sortArrays = arr => {\n      return arr.sort((a, b) => b.length - a.length)\n    }\n    const consonantsFlat = sortArrays(\n      distinguishCase(flattenArrays(consonants))\n    )\n    const vowelsFlat = sortArrays(distinguishCase(flattenArrays(vowels)))\n\n    let rawResults = {}\n\n    // Add each element in the flattened arrays to the results object and indicate which type they are\n    const initResults = (arr, type) => {\n      arr.forEach(el => {\n        rawResults[el] = {}\n        rawResults[el].count = 0\n        rawResults[el].type = type\n      })\n    }\n    initResults(consonantsFlat, 'consonant')\n    initResults(vowelsFlat, 'vowel') // Currently, if an element appears in both consonants and vowels, its vowel instance will take precedence\n\n    // Label which segments are allophones\n    const labelAllophones = arr => {\n      arr.forEach((elArr, i) => {\n        if (elArr.length > 1) {\n          elArr.forEach((el, j) => {\n            if (j > 0) {\n              rawResults[arr[i][j]].allophoneOf = arr[i][0]\n            }\n          })\n        }\n      })\n    }\n    labelAllophones(consonants)\n    labelAllophones(vowels)\n\n    // Build a single array and sort by segment length\n    const fullArr = sortArrays(consonantsFlat.concat(vowelsFlat))\n\n    // If not distinguishing case, convert the corpus to lowercase\n    let corpus = data.distinguishCase ? data.corpus : data.corpus.toLowerCase()\n\n    // For every instance of the segment in the text, increment the count and slice the instance out of the text\n    const sliceAndCount = seg => {\n      if (corpus.indexOf(seg) > -1) {\n        rawResults[seg].count += 1\n        corpus =\n          corpus.slice(0, corpus.indexOf(seg)) +\n          corpus.slice(corpus.indexOf(seg) + seg.length)\n      }\n    }\n\n    // Loop through all segments counting and slicing all instances of each.\n    fullArr.forEach(el => {\n      while (corpus.indexOf(el) > -1) {\n        sliceAndCount(el)\n      }\n    })\n\n    // Find allophones and combine their counts\n    for (let seg in rawResults) {\n      if (rawResults.hasOwnProperty(seg)) {\n        if (rawResults[seg].hasOwnProperty('allophoneOf')) {\n          rawResults[rawResults[seg].allophoneOf].count += rawResults[seg].count\n          delete rawResults[seg]\n        }\n      }\n    }\n\n    // Assemble the data\n    const assembleData = filter => {\n      // Add the results to a results array\n      let resArr = []\n\n      for (let seg in rawResults) {\n        if (rawResults[seg].type === filter || filter === undefined) {\n          resArr.push({\n            segment: seg,\n            count: rawResults[seg].count,\n            type: rawResults[seg].type\n          })\n        }\n      }\n\n      // Sort by smallest count\n      resArr.sort((a, b) => {\n        return a.count - b.count\n      })\n\n      // Count the total number of counted segments\n      let count = 0\n\n      resArr.forEach(elObj => {\n        count += elObj.count\n      })\n\n      return resArr.map((d, i) => ({\n        x: (d.count / count) * 100,\n        y: d.segment,\n        count: d.count,\n        type: d.type,\n        i: i,\n        color:\n          d.type === 'consonant' ? v.blu.string() : v.blu.darken(0.2).string()\n      }))\n    }\n\n    const results = {\n      all: assembleData(),\n      consonants: assembleData('consonant'),\n      vowels: assembleData('vowel')\n    }\n\n    return results\n  }\n\n  // Save the current state to storage and generate a file\n  save (data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.analyzed = false\n    // Save data to storage\n    this.setStorage(newData)\n    if (window.File) {\n      // If the browser has access to File, save the file locally\n      fileProcessor.saveFile(newData, this.item)\n    } else {\n      // If the browser can't access File, display a notification\n      toast.info(\n        'Your browser is unable to save files. The data has been saved to your browser’s local storage.',\n        {\n          autoClose: 5000,\n          className: 'toast-unsaved',\n          bodyClassName: 'toast-unsaved-body',\n          progressClassName: 'toast-unsaved-progress'\n        }\n      )\n    }\n  }\n\n  // Open a file and parse it to restore a saved state\n  open (file, callback) {\n    let response\n\n    const processResults = result => {\n      // If correct filetype\n      if (file.name.endsWith('.lngf')) {\n        // Define correct file structure\n        const resultSchema = schema({\n          color: String,\n          count: Number,\n          i: Number,\n          type: String,\n          x: Number,\n          y: String\n        })\n\n        const DataSchema = schema({\n          corpus: String,\n          consonants: String,\n          vowels: String,\n          distinguishCase: Boolean,\n          analyzed: Boolean,\n          '?results': {\n            all: Array.of(resultSchema),\n            consonants: Array.of(resultSchema),\n            vowels: Array.of(resultSchema)\n          },\n          '?hovered': resultSchema,\n          filter: String\n        })\n\n        let content = JSON.parse(result)\n\n        if (content.hovered) {\n          content.hovered.count = +content.hovered.count\n          content.hovered.i = +content.hovered.i\n          content.hovered.x = +content.hovered.x\n        }\n\n        if (content.results) {\n          content.results.all.forEach(el => {\n            el.count = +el.count\n            el.i = +el.i\n            el.x = +el.x\n          })\n          content.results.consonants.forEach(el => {\n            el.count = +el.count\n            el.i = +el.i\n            el.x = +el.x\n          })\n          content.results.vowels.forEach(el => {\n            el.count = +el.count\n            el.i = +el.i\n            el.x = +el.x\n          })\n        }\n\n        content.analyzed = false\n\n        if (DataSchema(content)) {\n          // If the file's content contains valid Data, load it\n          toast.success(`Data loaded from ${file.name}.`, {\n            autoClose: 5000,\n            className: 'toast-opened',\n            bodyClassName: 'toast-opened-body',\n            progressClassName: 'toast-opened-progress'\n          })\n\n          this.setStorage(content)\n\n          response = content\n        } else {\n          // If the file's content does not contain valid Data, show an error\n          toast.info(`The content of ${file.name} is invalid.`, {\n            autoClose: 5000,\n            className: 'toast-unopened',\n            bodyClassName: 'toast-unopened-body',\n            progressClassName: 'toast-unopened-progress'\n          })\n\n          // eslint-disable-next-line\n          console.error(DataSchema.errors(content))\n\n          response = false\n        }\n      } else {\n        // If incorrect filetype\n        toast.info('Wrong filetype selected.', {\n          autoClose: 5000,\n          className: 'toast-unopened',\n          bodyClassName: 'toast-unopened-body',\n          progressClassName: 'toast-unopened-progress'\n        })\n\n        response = false\n      }\n\n      callback(response)\n    }\n\n    if (window.FileReader) {\n      // If the browser has access to the File APIs, open the file\n      fileProcessor.openFile(file, processResults)\n    } else {\n      // If the browser can't access the File APIs, display a notification\n      toast.info('Your browser is unable to open files.', {\n        autoClose: 5000,\n        className: 'toast-unopened',\n        bodyClassName: 'toast-unopened-body',\n        progressClassName: 'toast-unopened-progress'\n      })\n\n      response = false\n      callback(response)\n    }\n  }\n}\n\nconst frequenService = new FrequenService()\n\nexport default frequenService\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  input: {\n    width: '100%'\n  },\n  corpusInput: {\n    height: `${2 * v.ms6}rem`\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport ButtonLink from '../../components/Button/Link'\n\nimport FrequenForm from './FrequenForm'\nimport FrequenResults from './FrequenResults'\nimport frequenService from './FrequenService'\nimport styles from './styles'\n\nimport { canonical, siteTitle } from '../../App'\n\nclass Frequen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChangeInput = this.onChangeInput.bind(this)\n    this.onAnalyze = this.onAnalyze.bind(this)\n    this.onMouseOver = this.onMouseOver.bind(this)\n    this.onMouseOut = this.onMouseOut.bind(this)\n    this.state = frequenService.getData()\n  }\n\n  onChangeInput (e) {\n    if (e.target.tagName === 'BUTTON') {\n      e.preventDefault()\n      if (e.target.id === 'save') {\n        // Save the current state to storage and generate a file\n        frequenService.save(this.state)\n      }\n    } else if (e.target.type === 'file') {\n      e.preventDefault()\n      // Open a file and parse it to restore a saved state\n      const file = e.target.files[0]\n      const updateState = response => {\n        if (response) {\n          // Only change state if the file was successfully opened\n          this.setState(prevState => response)\n        }\n      }\n      frequenService.open(file, updateState)\n    } else {\n      const val =\n        e.target.type === 'checkbox' ? e.target.checked : e.target.value\n      const name = e.target.name\n      this.setState(prevState => ({\n        [name]: val\n      }))\n    }\n  }\n\n  onAnalyze (e) {\n    e.preventDefault()\n    this.setState(\n      prevState => ({\n        analyzed: false\n      }),\n      () => {\n        // Save the current state to storage\n        frequenService.setStorage(this.state)\n\n        const response = frequenService.analyze(this.state)\n\n        this.setState(prevState => ({\n          results: response,\n          analyzed: true\n        }))\n      }\n    )\n  }\n\n  onMouseOver (datapoint) {\n    this.setState(prevState => ({\n      hovered: datapoint\n    }))\n  }\n\n  onMouseOut () {\n    this.setState(prevState => ({\n      hovered: undefined\n    }))\n  }\n\n  render () {\n    return (\n      <div className={this.props.classes.frequen}>\n        <Helmet>\n          <title>{siteTitle} Frequen</title>\n          <meta\n            name='description'\n            content='LanguaFrequen is a tool for analyzing phoneme frequencies in a given text.'\n          />\n          <link rel='canonical' href={`${canonical}frequen/`} />\n        </Helmet>\n        <ButtonLink route='/frequen/help'>Help</ButtonLink>\n        <h2 className='toolTitle'>LanguaFrequen</h2>\n        <FrequenForm\n          styles={this.props.classes}\n          state={this.state}\n          onChangeInput={this.onChangeInput}\n          onAnalyze={this.onAnalyze}\n        />\n        <FrequenResults\n          styles={this.props.classes}\n          results={this.state.results}\n          hovered={this.state.hovered}\n          filter={this.state.filter}\n          analyzed={this.state.analyzed}\n          onChangeInput={this.onChangeInput}\n          onMouseOver={this.onMouseOver}\n          onMouseOut={this.onMouseOut}\n        />\n      </div>\n    )\n  }\n}\n\nFrequen.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Frequen)\n","import React from 'react'\n\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nconst toolTitle = 'Frequen'\n\nconst FrequenHelp = props => (\n  <Help\n    toolTitle={toolTitle}\n    toolDescription={`Langua${toolTitle} is a tool for analyzing phoneme frequencies in a given text.`}\n    link='frequen'\n  >\n    <Notice>This tool is still in development.</Notice>\n    <h3 id='using'>\n      Using Langua\n      {toolTitle}\n    </h3>\n    <h4 id='corpus'>Text Corpus</h4>\n    <p>\n      Input a corpus of text in the <strong>Text Corpus</strong> field. This is\n      the text that will be analyzed. The text can be phomic or phonetic, or it\n      can simply use the language&rsquo;s standard spelling system. For best\n      results, however, each sound that should be analyzed separately will need\n      its own grapheme or grapheme cluster. For example, in English, the letter{' '}\n      <code>y</code> would need to be differentiated based on when it occurs as\n      a consonant vs. when it occurs as a vowel. It does not matter if\n      punctuation is removed from the corpus, as any graphemes not identified\n      for analysis in the next step will be ignored by the tool.\n    </p>\n    <h4 id='phonemes'>Phonemes</h4>\n    <p>\n      Next, add a list of consonants and vowels accordingly to the{' '}\n      <strong>Consonants</strong> and <strong>Vowels</strong> lists. Separate\n      each of the segments with a forward slash (<code>/</code>\n      ). These segments can be single graphemes or grapheme clusters, and a\n      cluster can contain characters that are used in shorter segments. For\n      example, given the corpus <code>kanto</code> and the consonants{' '}\n      <code>n/t/nt</code>, the tool will identify one occurance of{' '}\n      <code>nt</code>, but no occurances of <code>n</code> or <code>t</code>.\n      Any graphemes not identified for analysis will be ignored. In the previous\n      example, since <code>k</code> was not added to the list of consonants, the\n      tool would not count its occurance.\n    </p>\n    <h4 id='allophones'>Allophones</h4>\n    <p>\n      Allophones can be added after a segment to indicate that multiple segments\n      should all be counted as occurances of the same segment. Separate\n      allophones with a comma (<code>,</code>\n      ). For example, given the corpus <code>potaná</code>, if the vowels list\n      contained <code>a/á/o</code>, the tool would identify one occurance each\n      of <code>a</code>, <code>á</code>, and <code>o</code>, but if the vowels\n      list contained <code>a,á/o</code>, the tool would identify two occurances\n      of <code>a</code> and one occurance of <code>o</code>.\n    </p>\n    <h4 id='analysis'>Analysis</h4>\n    <p>\n      When ready, click the <strong>Analyze</strong> button to run the analysis.\n      The tool will draw a graph and display a table showing the frequencies of\n      each of the identified segments in the text corpus.\n    </p>\n    <h4 id='filtering'>Filtering</h4>\n    <p>\n      After a text has been analyzed, the results can be filtered to show only\n      certain segments. Choosing a filter will show the percentages in the data\n      as it compares to only segments of that type, rather than comparing to all\n      segments.\n    </p>\n    <p>\n      Currently, the results can be filtered to show only consonants or only\n      vowels. Additional filtering options will be added in the future.\n    </p>\n    <h4 id='files'>Saving and Loading Settings</h4>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Clicking the <strong>Save</strong> button will save the current settings\n      to the browser’s local storage and generate a small <code>.lngf</code>{' '}\n      text file containing the current settings that can be saved to your disk.\n      This <code>.lngf</code> file can be loaded using the <strong>Open</strong>{' '}\n      button to reload saved settings.\n    </p>\n    <h3 id='acknowledgments'>Acknowledgments</h3>\n    <p>\n      Much thanks should be given to Jan Strasser and{' '}\n      <a\n        href='http://akana.conlang.org/tools/frequentizer.html'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        the Frequentizer\n      </a>\n      . LanguaFrequen was mainly built as a modernized and updated version of\n      the Frequentizer.\n    </p>\n  </Help>\n)\n\nexport default FrequenHelp\n","export const defData = {\n  subpatterns: [\n    {\n      selected: 'V',\n      subpattern: 'a/e/i/o/u'\n    },\n    {\n      selected: 'C',\n      subpattern: 'p/t/k/b/d/g/s/m/n/l/r'\n    },\n    {\n      selected: 'N',\n      subpattern: 'm/n'\n    }\n  ],\n  pattern: 'V/CV/CVN/CVCV/CVCVN',\n  words: 100,\n  newline: false,\n  filterdupes: false\n}\n\nexport const vars = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z'\n]\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button'\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\nimport Control from '../../components/Control'\nimport ControlSide from '../../components/Control/Side'\nimport ControlPiece from '../../components/Control/Piece'\n\nimport { vars } from './defaultData'\n\nconst GenForm = props => {\n  const filePicker = React.createRef()\n\n  const selectOptions = vars.map((variab, index) => (\n    <option key={index} value={variab}>\n      {variab}\n    </option>\n  ))\n\n  const subpatternRows = props.data.subpatterns.map((subpattern, index) => (\n    <div key={index} className={props.styles.subpsRow}>\n      <select\n        id={`v${index}`}\n        name={`v${index}`}\n        value={subpattern.selected}\n        onChange={props.change}\n      >\n        {selectOptions}\n      </select>\n      <input\n        type='text'\n        id={`p${index}`}\n        name={`p${index}`}\n        className={props.styles.subpatternInput}\n        value={subpattern.subpattern}\n        onChange={props.change}\n      />\n      <div className={props.styles.clearButton}>\n        <Button\n          id={`c${index}`}\n          onClick={props.change}\n          ver='danger'\n          addClass='small'\n          type='button'\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  ))\n\n  const addButton = () => {\n    if (props.data.subpatterns.length < vars.length) {\n      return (\n        <div className={props.styles.addingRow}>\n          <Button\n            onClick={props.change}\n            id='add'\n            ver='success'\n            addClass='small'\n            type='button'\n          >\n            Add\n          </Button>\n        </div>\n      )\n    }\n  }\n\n  const invokeFilePicker = e => {\n    e.preventDefault()\n    filePicker.current.value = ''\n    filePicker.current.click()\n  }\n\n  return (\n    <Form>\n      <div className={classNames(props.styles.subpatterns, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Subpatterns</h5>\n        {subpatternRows}\n        {addButton()}\n      </div>\n      <div className={classNames(props.styles.pattern, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Pattern</h5>\n        <input\n          type='text'\n          id='pattern'\n          name='pattern'\n          className={props.styles.patternInput}\n          value={props.data.pattern}\n          onChange={props.change}\n        />\n      </div>\n      <Control addedClasses={props.classes.part}>\n        <ControlSide side='left'>\n          <ControlPiece>\n            <Button\n              id='generate'\n              onClick={props.change}\n              type='submit'\n              ver='neutral'\n            >\n              Generate\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <label htmlFor='words'>words:</label>\n            <input\n              type='number'\n              id='words'\n              name='words'\n              min='1'\n              max='9999'\n              className={props.styles.wordsInput}\n              value={props.data.words}\n              onChange={props.change}\n            />\n          </ControlPiece>\n          <ControlPiece>\n            <label>\n              <input\n                type='checkbox'\n                id='newline'\n                name='options'\n                value='newline'\n                checked={props.data.newline}\n                onChange={props.change}\n              />{' '}\n              new line each\n            </label>\n          </ControlPiece>\n          <ControlPiece>\n            <label>\n              <input\n                type='checkbox'\n                id='filterdupes'\n                name='options'\n                value='filterdupes'\n                checked={props.data.filterdupes}\n                onChange={props.change}\n              />{' '}\n              filter duplicates\n            </label>\n          </ControlPiece>\n        </ControlSide>\n        <ControlSide side='right'>\n          <ControlPiece>\n            <Button\n              id='save'\n              ver='success'\n              onClick={props.change}\n              type='button'\n            >\n              Save\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <Button id='open' onClick={invokeFilePicker} type='button'>\n              Open\n            </Button>\n            <input\n              id='file'\n              name='file'\n              className={props.classes.hidden}\n              type='file'\n              ref={filePicker}\n              onChange={props.change}\n            />\n          </ControlPiece>\n        </ControlSide>\n      </Control>\n    </Form>\n  )\n}\n\nGenForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  data: PropTypes.shape({\n    subpatterns: PropTypes.arrayOf(\n      PropTypes.shape({\n        selected: PropTypes.string.isRequired,\n        subpattern: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    pattern: PropTypes.string.isRequired,\n    words: PropTypes.number.isRequired,\n    newline: PropTypes.bool.isRequired,\n    filterdupes: PropTypes.bool.isRequired\n  }).isRequired,\n  change: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedFormStyles)(GenForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst GenResults = props => {\n  const words = props.stats.words.toLocaleString()\n  const maxWords = props.stats.maxWords.toLocaleString()\n  const filteredWords = props.stats.filtered.toLocaleString()\n  const remainingWords = props.stats.remaining.toLocaleString()\n\n  const outputText = styles => {\n    const filterResults = props.filterDupes\n      ? Array.from(new Set(props.results))\n      : props.results\n    const joinedResults = Array.prototype.join\n      .call(filterResults, `${props.newLine ? '\\n' : ' '}`)\n      .trim()\n\n    return <p className={styles.outText}>{joinedResults}</p>\n  }\n\n  const errorText = classes => {\n    if (props.status.includes('ok')) {\n      return null\n    } else {\n      return props.status.map((error, index) => (\n        <p key={index} className={classes.error}>\n          {error}\n        </p>\n      ))\n    }\n  }\n\n  const statsText = () => {\n    if (props.filterDupes) {\n      return `words: ${remainingWords} (${filteredWords} filtered out); maximum different words: ${maxWords}`\n    } else {\n      return `words: ${words}; maximum different words: ${maxWords}`\n    }\n  }\n\n  return (\n    <Results>\n      <div className={props.styles.output}>\n        {errorText(props.classes)}\n        {outputText(props.styles)}\n      </div>\n      <div className={props.classes.stats}>\n        <p className={props.classes.statsText}>{statsText()}</p>\n      </div>\n    </Results>\n  )\n}\n\nGenResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  newLine: PropTypes.bool.isRequired,\n  filterDupes: PropTypes.bool.isRequired,\n  status: PropTypes.arrayOf(PropTypes.string).isRequired,\n  results: PropTypes.arrayOf(PropTypes.string).isRequired,\n  stats: PropTypes.shape({\n    words: PropTypes.number.isRequired,\n    maxWords: PropTypes.number.isRequired,\n    filtered: PropTypes.number.isRequired,\n    remaining: PropTypes.number.isRequired\n  }).isRequired\n}\n\nexport default injectSheet(sharedResultsStyles)(GenResults)\n","import { toast } from 'react-toastify'\nimport schema from 'js-schema'\n\nimport fileProcessor from '../../tools/fileProcessor'\n\nimport { defData, vars } from './defaultData'\n\nclass GenService {\n  constructor () {\n    this.storage = window.localStorage\n    this.item = 'gen'\n    this.getData = this.getData.bind(this)\n    this.setStorage = this.setStorage.bind(this)\n    this.changeSelect = this.changeSelect.bind(this)\n    this.changeSubpattern = this.changeSubpattern.bind(this)\n    this.clear = this.clear.bind(this)\n    this.add = this.add.bind(this)\n    this.changePattern = this.changePattern.bind(this)\n    this.wordNumChange = this.wordNumChange.bind(this)\n    this.changeNewline = this.changeNewline.bind(this)\n    this.changeDupes = this.changeDupes.bind(this)\n    this.checkErrors = this.checkErrors.bind(this)\n    this.generate = this.generate.bind(this)\n    this.build = this.build.bind(this)\n    this.save = this.save.bind(this)\n    this.open = this.open.bind(this)\n  }\n\n  getData () {\n    let data\n\n    // Check if there's storage access\n    if (typeof Storage !== 'undefined') {\n      // If we can access storage, check if there is data in storage.\n      if (this.storage.getItem(this.item)) {\n        // If there's data in storage, pull it\n        data = JSON.parse(this.storage.getItem(this.item))\n      } else {\n        // If there's not data in storage, pull the default data\n        data = defData\n        // Store the default data in storage\n        this.setStorage(data)\n      }\n    } else {\n      // If we can't access storage, use the default data\n      data = defData\n    }\n\n    return data\n  }\n\n  // Store the current data in storage\n  setStorage (data) {\n    if (typeof Storage !== 'undefined') {\n      this.storage.setItem(this.item, JSON.stringify(data))\n    }\n  }\n\n  // When a Subpattern variable is changed, create a new version of state\n  changeSelect (id, val, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.subpatterns[id].selected = val\n    return newData\n  }\n\n  // When a Subpattern is changed, create a new version of state\n  changeSubpattern (id, val, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.subpatterns[id].subpattern = val\n    return newData\n  }\n\n  // When a Subpattern is cleared, create a new version of state\n  clear (id, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.subpatterns.splice(id, 1)\n    return newData\n  }\n\n  // When a Subpattern is added, create a new version of state\n  add (data) {\n    let toUse = ''\n    let newData = JSON.parse(JSON.stringify(data))\n\n    // Identify the first unused Subpattern variable and select it\n    for (let i = 0; i < vars.length; i++) {\n      let used = false\n      for (let j = 0; j < newData.subpatterns.length; j++) {\n        if (newData.subpatterns[j].selected === vars[i]) {\n          used = true\n          break\n        } else {\n          continue\n        }\n      }\n      if (!used) {\n        toUse = vars[i]\n        break\n      } else {\n        continue\n      }\n    }\n\n    if (newData.subpatterns.length < vars.length) {\n      newData.subpatterns.push({ selected: toUse, subpattern: '' })\n    }\n\n    return newData\n  }\n\n  // When the pattern is changed, create a new version of state\n  changePattern (val, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.pattern = val\n    return newData\n  }\n\n  // When the number of desired words is changed, create a new version of state\n  wordNumChange (val, data) {\n    // Limit number entry to between 1 and 9999\n    if (val < 1) {\n      val = 1\n    } else if (val > 9999) {\n      val = 9999\n    }\n\n    // Only change state if the number is between 1 and 9999\n    if (val > 0 && val < 10000) {\n      let newData = JSON.parse(JSON.stringify(data))\n      newData.words = val\n      return newData\n    } else {\n      // Otherwise, keep state the same\n      return false\n    }\n  }\n\n  // If the selection for new lines is changed, create a new version of state\n  changeNewline (checked, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.newline = checked\n    return newData\n  }\n\n  // If the selection for filtering duplicates is changed, create a new version of state\n  changeDupes (checked, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.filterdupes = checked\n    return newData\n  }\n\n  // Check the input for errors\n  checkErrors (data) {\n    let status = []\n\n    // Check Subpattern for circular reference\n    const getSp = selected => {\n      let sp = ''\n      for (let i = 0; i < data.subpatterns.length; i++) {\n        if (data.subpatterns[i].selected === selected) {\n          sp = data.subpatterns[i].subpattern\n          break\n        }\n      }\n      return sp\n    }\n\n    const idDeps = subpattern => {\n      let deps = []\n      for (let i = 0; i < subpattern.length; i++) {\n        if (vars.includes(subpattern[i])) {\n          deps.push(subpattern[i])\n        }\n      }\n      return Array.from(new Set(deps))\n    }\n\n    const checkCirc = (selected, refed) => {\n      const sp = getSp(selected)\n      const deps = idDeps(sp)\n      let circ = false\n\n      if (deps.length > 0) {\n        if (deps.includes(selected) || refed.includes(selected)) {\n          circ = true\n        } else {\n          let i = 0\n          refed.push(selected)\n          while (!circ && i < deps.length) {\n            circ = checkCirc(deps[i], refed)\n            i++\n          }\n        }\n      }\n\n      return circ\n    }\n\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      const deps = idDeps(data.subpatterns[i].subpattern)\n      let refed = []\n\n      if (deps.length > 0) {\n        for (let j = 0; j < deps.length; j++) {\n          if (checkCirc(deps[j], refed)) {\n            status.push('The Subpatterns contain a circular reference.')\n            break\n          }\n        }\n      }\n    }\n\n    // Check for duplicate Subpattern variable names\n    let duplicates = []\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      let current = data.subpatterns[i].selected\n\n      for (let j = 0; j < data.subpatterns.length; j++) {\n        if (i === j) {\n          continue\n        } else {\n          if (data.subpatterns[j].selected === current) {\n            duplicates.push(current)\n          }\n        }\n      }\n    }\n\n    duplicates = Array.from(new Set(duplicates))\n    const dupes = duplicates.join(', ')\n\n    if (duplicates.length > 1) {\n      status.push(\n        `Some Subpattern variables (${dupes}) have been used multiple times.`\n      )\n    } else if (duplicates.length === 1) {\n      status.push(\n        `The Subpattern variable ${dupes} has been used multiple times.`\n      )\n    }\n\n    // Check Pattern for undefined variable\n    let defed = []\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      defed.push(data.subpatterns[i].selected)\n    }\n\n    let undefed = []\n    for (let i = 0; i < data.pattern.length; i++) {\n      if (vars.includes(data.pattern[i])) {\n        if (!defed.includes(data.pattern[i])) {\n          undefed.push(data.pattern[i])\n        }\n      }\n    }\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      for (let j = 0; j < data.subpatterns[i].subpattern.length; j++) {\n        if (vars.includes(data.subpatterns[i].subpattern[j])) {\n          if (!defed.includes(data.subpatterns[i].subpattern[j])) {\n            undefed.push(data.subpatterns[i].subpattern[j])\n          }\n        }\n      }\n    }\n\n    const undefSet = Array.from(new Set(undefed))\n    const undefs = undefSet.join(', ')\n\n    if (undefSet.length > 1) {\n      // Update this status message once escaping characters is enabled\n      status.push(\n        `Some capital A–Z letters (${undefs}) were used but not defined as variables. If your intention is to include these characters as a letter in the results, a future version will allow this using escaped characters.`\n      )\n    } else if (undefSet.length === 1) {\n      status.push(\n        `The capital letter ${undefs} was used but not defined as a variable. If your intention is to include this character as a letter in the results, a future version will allow this using escaped characters.`\n      )\n    }\n\n    status = Array.from(new Set(status))\n    return status\n  }\n\n  // Start the generation process\n  generate (data) {\n    const status = this.checkErrors(data)\n    let results\n\n    if (status.length > 0) {\n      results = {\n        status: status,\n        results: [],\n        stats: {\n          words: 0,\n          maxWords: 0,\n          filtered: 0,\n          remaining: 0\n        }\n      }\n    } else {\n      results = this.build(data, ['ok'])\n    }\n\n    return results\n  }\n\n  // Generate the output\n  build (data, status) {\n    let results = []\n    let newData = JSON.parse(JSON.stringify(data))\n\n    // Randomly choose from the items in an array\n    const chooseRand = length => {\n      return Math.floor(Math.random() * length)\n    }\n\n    // Get the subpattern for a variable\n    const getSubpattern = (subpatterns, selected) => {\n      let subpattern = []\n      for (let i = 0; i < subpatterns.length; i++) {\n        if (subpatterns[i].selected === selected) {\n          subpattern = subpatterns[i].subpattern\n          break\n        }\n      }\n      return subpattern\n    }\n\n    // If a chosen item is a defined variable, randomly choose from its own Subpattern\n    const resolveVar = (subpatterns, selected) => {\n      let letter = ''\n      if (vars.includes(selected)) {\n        const subpattern = getSubpattern(subpatterns, selected)\n        const selection = subpattern[chooseRand(subpattern.length)]\n        if (vars.includes(selection)) {\n          letter = resolveVar(subpatterns, selection)\n        } else {\n          letter = selection\n        }\n      } else {\n        letter = selected\n      }\n      if (letter.length > 1) {\n        letter = resolveOpt(subpatterns, letter)\n      }\n      return letter\n    }\n\n    const resolveOpt = (subpatterns, option) => {\n      let letters = ''\n      for (let i = 0; i < option.length; i++) {\n        if (/[()[\\]^*\"]/.test(option[i])) {\n          // For now, ignore the characters that will be used for operations\n          continue\n        } else {\n          letters += resolveVar(subpatterns, option[i])\n        }\n      }\n      return letters\n    }\n\n    // Split all the Subpatterns into arrays based on '/'\n    for (let i = 0; i < newData.subpatterns.length; i++) {\n      newData.subpatterns[i].subpattern = newData.subpatterns[\n        i\n      ].subpattern.split('/')\n    }\n\n    // Split the Pattern into an array based on '/'\n    const pattArr = newData.pattern.split('/')\n\n    // Generate the number of words requested in the settings\n    for (let i = 0; i < newData.words; i++) {\n      let word = ''\n\n      // If the Pattern has options, choose one\n      const patt = pattArr[chooseRand(pattArr.length)]\n\n      word += resolveOpt(newData.subpatterns, patt)\n\n      results.push(word)\n    }\n\n    // Calculate the stats on the generated output\n\n    // Calculate the maximum number of words\n    let count = 0\n\n    for (let i = 0; i < pattArr.length; i++) {\n      let optCount = 1\n      if (pattArr[i].length === 0) {\n        optCount = 0\n        break\n      } else {\n        for (let j = 0; j < pattArr[i].length; j++) {\n          const variab = pattArr[i][j]\n          let addCount = 0\n          let multCount = 1\n          if (/[()[\\]^*\"]/.test(variab)) {\n            // For now, ignore the characters that will be used for operations\n            continue\n          } else if (!vars.includes(variab)) {\n            // If the current item in the Pattern is not a variable, add 1 to the count\n            addCount += 1\n          } else {\n            for (let k = 0; k < newData.subpatterns.length; k++) {\n              const subpattern = newData.subpatterns[k]\n              if (subpattern.selected === variab) {\n                // If the variable is defined, count how many options are in the Subpattern\n                multCount *= subpattern.subpattern.length\n                break\n              } else {\n                // If the variable is unused, skip it\n                continue\n              }\n            }\n          }\n          optCount *= multCount\n          optCount += addCount\n        }\n      }\n      count += optCount\n    }\n\n    // If there are results, count how many words there are\n    let words = 0\n    if (results[0].length !== 0) {\n      words = results.length\n    }\n\n    const filteredWords = Array.from(new Set(results))\n    const remaining = filteredWords.length\n    const filtered = newData.words - remaining\n\n    const response = {\n      status: status,\n      results: results,\n      stats: {\n        words: words,\n        maxWords: count,\n        filtered: filtered,\n        remaining: remaining\n      }\n    }\n\n    return response\n  }\n\n  // Save the current state to storage and generate a file\n  save (data) {\n    // Save data to storage\n    this.setStorage(data)\n    if (window.File) {\n      // If the browser has access to File, save the file locally\n      fileProcessor.saveFile(data, this.item)\n    } else {\n      // If the browser can't access File, display a notification\n      toast.info(\n        'Your browser is unable to save files. The data has been saved to your browser’s local storage.',\n        {\n          autoClose: 5000,\n          className: 'toast-unsaved',\n          bodyClassName: 'toast-unsaved-body',\n          progressClassName: 'toast-unsaved-progress'\n        }\n      )\n    }\n  }\n\n  // Open a file and parse it to restore a saved state\n  open (file, callback) {\n    let response\n\n    const processResults = result => {\n      // If correct filetype\n      if (file.name.endsWith('.lngg')) {\n        // Define correct file structure\n        const SubpatternSchema = schema({\n          selected: /[A-Z]/,\n          subpattern: String\n        })\n\n        const DataSchema = schema({\n          subpatterns: Array.of(1, 24, SubpatternSchema),\n          pattern: String,\n          words: Number.min(1).max(9999),\n          newline: Boolean,\n          filterdupes: Boolean\n        })\n\n        let content = JSON.parse(result)\n\n        content.words = parseInt(content.words, 10)\n\n        if (DataSchema(content)) {\n          // If the file's content contains valid Data, load it\n          toast.success(`Data loaded from ${file.name}.`, {\n            autoClose: 5000,\n            className: 'toast-opened',\n            bodyClassName: 'toast-opened-body',\n            progressClassName: 'toast-opened-progress'\n          })\n\n          this.setStorage(content)\n\n          response = content\n        } else {\n          // If the file's content does not contain valid Data, show an error\n          toast.info(`The content of ${file.name} is invalid.`, {\n            autoClose: 5000,\n            className: 'toast-unopened',\n            bodyClassName: 'toast-unopened-body',\n            progressClassName: 'toast-unopened-progress'\n          })\n\n          // eslint-disable-next-line\n          console.error(DataSchema.errors(content))\n\n          response = false\n        }\n      } else {\n        // If incorrect filetype\n        toast.info('Wrong filetype selected.', {\n          autoClose: 5000,\n          className: 'toast-unopened',\n          bodyClassName: 'toast-unopened-body',\n          progressClassName: 'toast-unopened-progress'\n        })\n\n        response = false\n      }\n\n      callback(response)\n    }\n\n    if (window.FileReader) {\n      // If the browser has access to the File APIs, open the file\n      fileProcessor.openFile(file, processResults)\n    } else {\n      // If the browser can't access the File APIs, display a notification\n      toast.info('Your browser is unable to open files.', {\n        autoClose: 5000,\n        className: 'toast-unopened',\n        bodyClassName: 'toast-unopened-body',\n        progressClassName: 'toast-unopened-progress'\n      })\n\n      response = false\n      callback(response)\n    }\n  }\n}\n\nconst genService = new GenService()\n\nexport default genService\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  duplicate: {\n    outline: {\n      width: 1,\n      style: 'solid',\n      color: v.red.string()\n    }\n  },\n  subpsRow: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between'\n  },\n  addingRow: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    padding: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    },\n    margin: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    }\n  },\n  patternInput: {\n    width: '100%',\n    padding: 1,\n    margin: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    }\n  },\n  wordsInput: {\n    width: `${v.ms6}rem`\n  },\n  outText: {\n    whiteSpace: 'pre-wrap'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport ButtonLink from '../../components/Button/Link'\n\nimport GenForm from './GenForm'\nimport GenResults from './GenResults'\nimport genService from './GenService'\nimport styles from './styles'\n\nimport { canonical, siteTitle } from '../../App'\n\n// String.endsWith() polyfill\nif (!String.prototype.endsWith) {\n  // eslint-disable-next-line\n  String.prototype.endsWith = (search, thisLen) => {\n    if (thisLen === undefined || thisLen > this.length) {\n      thisLen = this.length\n    }\n    return this.substring(thisLen - search.length, thisLen) === search\n  }\n}\n\nclass Gen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChangeInput = this.onChangeInput.bind(this)\n    this.classes = props.classes\n    this.state = {\n      data: genService.getData(),\n      status: ['ok'],\n      results: [''],\n      stats: {\n        words: 0,\n        maxWords: 0,\n        filtered: 0,\n        remaining: 0\n      }\n    }\n  }\n\n  onChangeInput (e) {\n    if (e.target.tagName === 'BUTTON') {\n      e.preventDefault()\n      if (e.target.type === 'submit') {\n        // Generate the output\n        const response = genService.generate(this.state.data)\n        this.setState(prevState => ({\n          status: response.status,\n          results: response.results,\n          stats: response.stats\n        }))\n        // Save the current state to storage\n        genService.setStorage(this.state.data)\n      } else if (e.target.type === 'button') {\n        if (e.target.id === 'save') {\n          // Save the current state to storage and generate a file\n          genService.save(this.state.data)\n        } else if (e.target.id === 'add') {\n          // When the add button is clicked, add a blank Subpattern to state\n          this.setState(prevState => ({\n            data: genService.add(this.state.data)\n          }))\n        } else if (e.target.id.slice(0, 1) === 'c') {\n          // When a Subpattern is cleared, delete the corresponding Subpattern from state\n          const id = e.target.id.slice(1)\n          this.setState(prevState => ({\n            data: genService.clear(id, this.state.data)\n          }))\n        }\n      }\n    } else if (e.target.type === 'file') {\n      e.preventDefault()\n      // Open a file and parse it to restore a saved state\n      const file = e.target.files[0]\n      const updateState = response => {\n        if (response) {\n          // Only change state if the file was successfully opened\n          this.setState(prevState => ({\n            data: response\n          }))\n        }\n      }\n      genService.open(file, updateState)\n    } else if (e.target.type === 'checkbox') {\n      const checked = e.target.checked\n      if (e.target.id === 'newline') {\n        // If the selection for new lines is changed, store that change in state\n        this.setState(prevState => ({\n          data: genService.changeNewline(checked, this.state.data)\n        }))\n      } else if (e.target.id === 'filterdupes') {\n        // If the selection for filtering duplicates is changed, store that change in state\n        this.setState(prevState => ({\n          data: genService.changeDupes(checked, this.state.data)\n        }))\n      }\n    } else {\n      const val = e.target.value\n      if (e.target.id === 'pattern') {\n        // When the pattern is changed, store the change in state\n        this.setState(prevState => ({\n          data: genService.changePattern(val, this.state.data)\n        }))\n      } else if (e.target.id === 'words') {\n        // When the number of desired words is changed, store that change in state\n        const response = genService.wordNumChange(val, this.state.data)\n        if (response) {\n          // Only update state if there's a change\n          this.setState(prevState => ({\n            data: response\n          }))\n        }\n      } else {\n        const id = e.target.id.slice(1)\n        const which = e.target.id.slice(0, 1)\n        if (which === 'v') {\n          // When a Subpattern variable is changed, store that change in state\n          this.setState(prevState => ({\n            data: genService.changeSelect(id, val, this.state.data)\n          }))\n        } else if (which === 'p') {\n          // When a Subpattern is changed, store that change in state\n          this.setState(prevState => ({\n            data: genService.changeSubpattern(id, val, this.state.data)\n          }))\n        }\n      }\n    }\n  }\n\n  render () {\n    const classes = this.classes\n    const state = this.state\n\n    return (\n      <div className={classes.gen}>\n        <Helmet>\n          <title>{siteTitle} Gen</title>\n          <meta\n            name='description'\n            content='LanguaGen is a tool for automatically building a set of words based on arbitrary rules of phonotactics. This can be used to create a dummy vocabulary for linguistic experimentation, to generate words or names for a naming language in a work of fantasy or science fiction, or as the basis for building the vocabulary of a constructed language.'\n          />\n          <link rel='canonical' href={`${canonical}gen/`} />\n        </Helmet>\n        <ButtonLink route='/gen/help'>Help</ButtonLink>\n        <h2 className='toolTitle'>LanguaGen</h2>\n        <GenForm\n          styles={this.props.classes}\n          data={state.data}\n          change={this.onChangeInput}\n        />\n        <GenResults\n          styles={this.props.classes}\n          newLine={state.data.newline}\n          filterDupes={state.data.filterdupes}\n          status={state.status}\n          results={state.results}\n          stats={state.stats}\n        />\n      </div>\n    )\n  }\n}\n\nGen.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Gen)\n","import React from 'react'\n\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nconst toolTitle = 'Gen'\n\nconst GenHelp = props => (\n  <Help\n    toolTitle={toolTitle}\n    toolDescription={`Langua${toolTitle} is a tool for automatically building a set of words based on arbitrary rules of phonotactics. This can be used to create a dummy vocabulary for linguistic experimentation, to generate words or names for a naming language in a work of fantasy or science fiction, or as the basis for building the vocabulary of a constructed language.`}\n    link='gen'\n  >\n    <h3 id='using'>\n      Using Langua\n      {toolTitle}\n    </h3>\n    <p>\n      The most important part of the tool is the <strong>Pattern</strong>. This\n      field defines how words will be formed using a specific syntax, defined{' '}\n      <a href='#syntax'>below</a>. This field can define specific letters that\n      can be used, or it can contain references to Subpatterns.\n    </p>\n    <p>\n      Up to 26 <strong>Subpatterns</strong> are available for use. These\n      subpatterns are defined in exactly the same way as the Pattern. Their\n      power lies in the fact that each Subpattern can be referenced by the\n      Pattern, allowing significantly more variability in word generation.\n    </p>\n    <p>\n      In the most common usage, a Subpattern generally represents a class of\n      phonemes while the Pattern represents the possible combinations of all the\n      phoneme classes. For example, one might use a Subpattern named{' '}\n      <code>V</code> to represent vowels, <code>C</code> to represent\n      consonants, and <code>N</code> to represent nasals. Alternatively, one\n      might use a Subpattern named <code>O</code> to represent the syllable\n      onset, <code>N</code> to represent the nucleus, and <code>C</code> to\n      represent the coda. There is great flexibility in Subpattern use.\n    </p>\n    <h4 id='syntax'>Syntax</h4>\n    <p>\n      The syntax is identical for all Pattern and Subpattern fields. Uppercase\n      versions of the standard English letters (e.g. <code>C</code>,{' '}\n      <code>V</code>, or <code>N</code>) are variables referring to Subpatterns\n      while any other letter (e.g. <code>a</code>, <code>s</code>, or{' '}\n      <code>n</code>) represents that specific glyph.\n    </p>\n    <h5 id='options'>\n      Options &ndash; <code>/</code>\n    </h5>\n    <p>\n      Multiple options can be separated using forward slashes (<code>/</code>\n      ). For each word, the tool will randomly select one of the options. By\n      default, each option will have the same chance of being chosen. This can\n      be changed by assigning <a href='#weights'>weights</a>. For example, with\n      the Subpatterns <code>V: a/i</code>, <code>C: t/s</code>, and{' '}\n      <code>N: m/n</code> and the Pattern <code>CVN</code>, the tool will output\n      the words <samp>sam tan tam tin sim san tim sin</samp>.\n    </p>\n    <h5 id='units'>\n      Single Units &ndash; <code>[ ]</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Everything contained within brackets (<code>[ ]</code>) is treated as a\n      single unit. For example, the Pattern <code>as[tu/top/kan]</code> will\n      produce the output <code>astu astop askan</code>. Brackets and parentheses\n      can be nested unlimitedly.\n    </p>\n    <h5 id='optional'>\n      Optional Units &ndash; <code>( )</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Everything contained within parentheses (<code>( )</code>) is treated as a\n      single unit that is optional. For example, the Pattern{' '}\n      <code>as(tu/top/kan)</code> will produce the output{' '}\n      <code>as astu astop askan</code>. Parentheses and brackets can be nested\n      unlimitedly.\n    </p>\n    <h5 id='weights'>\n      Weights &ndash; <code>*</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Weights can be added to certain choices using an asterisk <code>*</code>{' '}\n      and a number to improve the likelihood of it being chosen. For example,\n      with the pattern <code>a/e*3/i*2/o/u*5</code>, the tool would output{' '}\n      <code>a</code> or <code>o</code> with equal probability, but compared to\n      these would be twice as likely to output <code>i</code>, three times as\n      likely to output <code>e</code>, and five times as likely to output{' '}\n      <code>u</code>. The number used as a weight must be an integer between 1\n      and 128.\n    </p>\n    <h5 id='filtering'>\n      Filtering &ndash; <code>^</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Filtering can be added to units using a caret <code>^</code> and a\n      potential output to restrict the possible results. Multiple filters can be\n      added to the same unit to filter out multiple options. For example, with\n      the Subpattern <code>V: a/i/u</code> and hte Pattern{' '}\n      <code>t[VV]^aa^ii^uu</code>, the tool will output{' '}\n      <code>tai tau tia tiu tua tui</code>, filtering out{' '}\n      <code>taa tii tuu</code>.\n    </p>\n    <h5 id='escaping'>\n      Esaping Characters &ndash; <code>&quot; &quot;</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Special characters otherwise used for the tool&rsquo;s syntax can be\n      escaped using double quotes <code>&quot; &quot;</code>. For example, with\n      the Subpattern <code>V: a/i/u</code> and the Pattern{' '}\n      <code>Vt&quot;V[n/m]&quot;</code>, the tool will produce the output{' '}\n      <code>atV[n/m] itV[n/m] utV[n/m]</code>.\n    </p>\n    <h4 id='generating'>Generating Words</h4>\n    <p>\n      Once the Pattern and all Subpatterns have been set up, you can click the{' '}\n      <strong>Generate</strong> button to generate words. There are also several\n      adjustments you can make, including the total number of words that should\n      be generated, whether each word should be written on a new line, and\n      whether the tool should filter out duplicate words.\n    </p>\n    <p>\n      After the words have been generated, some statistics are shown below,\n      including how many words were printed to the output, how many duplicates\n      were filtered out of the results (if any), and how many words are possible\n      based on the given Pattern and Subpatterns. (Note that the number of{' '}\n      <em>unique</em> words possible may actually be lower if there are multiple\n      ways to obtain the same word.)\n    </p>\n    <h4 id='files'>Saving and Loading Settings</h4>\n    <p>\n      Clicking the <strong>Save</strong> button will save the current settings\n      to the browser’s local storage and generate a small <code>.lngg</code>{' '}\n      text file containing the current settings that can be saved to your disk.\n      This <code>.lngg</code> file can be loaded using the <strong>Open</strong>{' '}\n      button to reload saved settings.\n    </p>\n    <h3 id='acknowledgments'>Acknowledgments</h3>\n    <p>\n      Much thanks should be given to Petr Mejzlík and{' '}\n      <a\n        href='https://github.com/nai888/awkwords'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        Awkwords\n      </a>\n      . LanguaGen was mainly built as a modernized and updated version of\n      Awkwords.\n    </p>\n  </Help>\n)\n\nexport default GenHelp\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\n\nconst MorphForm = props => <Form />\n\nMorphForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedFormStyles)(MorphForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst MorphResults = props => <Results />\n\nMorphResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedResultsStyles)(MorphResults)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Notice from '../../components/Notice'\nimport ButtonLink from '../../components/Button/Link'\n\nimport MorphForm from './MorphForm'\nimport MorphResults from './MorphResults'\nimport styles from './styles'\n\nimport { canonical, siteTitle } from '../../App'\n\nconst Morph = props => (\n  <div className={props.classes.morph}>\n    <Helmet>\n      <title>{siteTitle} Morph</title>\n      <meta\n        name='description'\n        content='LanguaMorph is a tool for modeling historical sound change according to arbitrary rules of phonetic change. It can also be used to reverse historical sound change according to those same rules in order to guess at a word’s proto-language roots.'\n      />\n      <link rel='canonical' href={`${canonical}morph/`} />\n    </Helmet>\n    <ButtonLink route='/morph/help'>Help</ButtonLink>\n    <h2 className='toolTitle'>LanguaMorph</h2>\n    <Notice>This tool is still in planning.</Notice>\n    <MorphForm styles={props.classes} />\n    <MorphResults styles={props.classes} />\n  </div>\n)\n\nMorph.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Morph)\n","import React from 'react'\n\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nconst toolTitle = 'Morph'\n\nconst MorphHelp = props => (\n  <Help\n    toolTitle={toolTitle}\n    toolDescription={`Langua${toolTitle} is a tool for modeling historical sound change according to arbitrary rules of phonetic change. It can also be used to reverse historical sound change according to those same rules in order to guess at a word’s proto-language roots.`}\n    link='morph'\n  >\n    <Notice>This tool is still in planning.</Notice>\n  </Help>\n)\n\nexport default MorphHelp\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\n\nconst TreeForm = props => <Form />\n\nTreeForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedFormStyles)(TreeForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst TreeResults = props => <Results />\n\nTreeResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedResultsStyles)(TreeResults)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Notice from '../../components/Notice'\nimport ButtonLink from '../../components/Button/Link'\n\nimport TreeForm from './TreeForm'\nimport TreeResults from './TreeResults'\nimport styles from './styles'\n\nimport { canonical, siteTitle } from '../../App'\n\nconst Tree = props => (\n  <div className={props.classes.tree}>\n    <Helmet>\n      <title>{siteTitle} Tree</title>\n      <meta\n        name='description'\n        content='LanguaTree is a tool for drawing and labeling syntax trees.'\n      />\n      <link rel='canonical' href={`${canonical}tree/`} />\n    </Helmet>\n    <ButtonLink route='/tree/help'>Help</ButtonLink>\n    <h2 className='toolTitle'>LanguaTree</h2>\n    <Notice>This tool is still in planning.</Notice>\n    <TreeForm styles={props.classes} />\n    <TreeResults styles={props.classes} />\n  </div>\n)\n\nTree.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Tree)\n","import React from 'react'\n\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nconst toolTitle = 'Tree'\n\nconst TreeHelp = props => (\n  <Help\n    toolTitle={toolTitle}\n    toolDescription={`Langua${toolTitle} is a tool for drawing and labeling syntax trees.`}\n    link='tree'\n  >\n    <Notice>This tool is still in planning.</Notice>\n  </Help>\n)\n\nexport default TreeHelp\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  main: {\n    minHeight: `${10 * v.lnht}rem`,\n    padding: {\n      top: `${2 * v.lnht}rem`,\n      right: 0,\n      bottom: `${2 * v.lnht}rem`,\n      left: 0\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport injectSheet from 'react-jss'\nimport { ToastContainer, toast, Flip } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\n\nimport Home from '../../routes/Home'\nimport Deriv from '../../routes/Deriv'\nimport DerivHelp from '../../routes/Deriv/Help'\nimport Frequen from '../../routes/Frequen'\nimport FrequenHelp from '../../routes/Frequen/Help'\nimport Gen from '../../routes/Gen'\nimport GenHelp from '../../routes/Gen/Help'\nimport Morph from '../../routes/Morph'\nimport MorphHelp from '../../routes/Morph/Help'\nimport Tree from '../../routes/Tree'\nimport TreeHelp from '../../routes/Tree/Help'\n\nimport styles from './styles'\n\nconst Main = props => (\n  <main>\n    <div className={props.classes.main}>\n      <Switch>\n        <Route path='/deriv/help' component={DerivHelp} />\n        <Route path='/deriv/' component={Deriv} />\n        <Route path='/frequen/help' component={FrequenHelp} />\n        <Route path='/frequen' component={Frequen} />\n        <Route path='/gen/help' component={GenHelp} />\n        <Route path='/gen' component={Gen} />\n        <Route path='/morph/help' component={MorphHelp} />\n        <Route path='/morph' component={Morph} />\n        <Route path='/tree/help' component={TreeHelp} />\n        <Route path='/tree' component={Tree} />\n        <Route path='/' component={Home} />\n      </Switch>\n    </div>\n    <ToastContainer\n      draggablePercent={60}\n      position={toast.POSITION.BOTTOM_CENTER}\n      transition={Flip}\n    />\n  </main>\n)\n\nMain.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Main)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  footer: {\n    textAlign: 'center',\n    borderTop: {\n      width: 1,\n      style: 'solid',\n      color: v.blu.darken(0.15).string()\n    },\n    padding: {\n      top: `${2 * v.lnht}rem`,\n      right: 0,\n      bottom: `${2 * v.lnht}rem`,\n      left: 0\n    },\n    '& a, & a:link, & a:visited, & a:hover, & a:active': {\n      textDecoration: 'none'\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst Footer = props => {\n  const getCopyrightYear = () => {\n    const initYear = 2017\n    const d = new Date()\n    const y = d.getFullYear()\n    return y > initYear ? `${initYear}–${y}` : initYear.toString()\n  }\n\n  const author = 'Ian A. Cook'\n  const authorURL = 'https://github.com/nai888'\n  const appGhURL = 'https://github.com/nai888/langua'\n  const appBpURL = 'https://beerpay.io/nai888/langua'\n  const version = '0.2.3'\n\n  return (\n    <footer>\n      <div className={props.classes.footer}>\n        <p className={props.classes.copyright}>\n          <a\n            href={appGhURL + '/blob/master/CHANGELOG.md'}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            Version <i className='fas fa-code' /> {version}\n          </a>\n          . Built by{' '}\n          <a href={authorURL} target='_blank' rel='noopener noreferrer'>\n            {author}\n          </a>\n          , copyright <i className='far fa-copyright' /> {getCopyrightYear()}{' '}\n          under the{' '}\n          <a\n            href='https://choosealicense.com/licenses/agpl-3.0/'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            AGPL-3.0 <i className='fas fa-gavel' /> license\n          </a>\n          .\n        </p>\n        <p className={props.classes.links}>\n          <a href={appGhURL} target='_blank' rel='noopener noreferrer'>\n            View this project on <i className='fab fa-github' /> GitHub\n          </a>{' '}\n          or{' '}\n          <a href={appBpURL} target='_blank' rel='noopener noreferrer'>\n            buy {author} a <i className='fas fa-beer' /> beer\n          </a>\n          .\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Footer)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport 'normalize.css/normalize.css'\nimport PropTypes from 'prop-types'\n\nimport * as v from './styles/variables'\nimport styles from './styles/app'\n\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\nexport const canonical = 'https://nai888.github.io/langua/'\nexport const siteTitle = 'Langua |'\n\nconst App = props => (\n  <div className={props.classes.app}>\n    <Helmet>\n      <title>{siteTitle} Language Tools</title>\n      <meta charSet='utf-8' />\n      <meta\n        name='viewport'\n        content='width=device-width, initial-scale=1, shrink-to-fit=no'\n      />\n      <meta name='author' content='Ian A. Cook' />\n      <meta\n        name='description'\n        content='Langua is a suite of language tools that can be used for testing, experimentation, learning, analysis, or creation.'\n      />\n      <meta name='theme-color' content={v.blu.string()} />\n      <link rel='canonical' href={canonical} />\n      <link\n        href='https://fonts.googleapis.com/css?family=Noto+Sans:400,400i,700,700i|Noto+Serif:400,400i,700,700i&amp;subset=greek,greek-ext,latin-ext'\n        rel='stylesheet'\n      />\n      <script\n        defer\n        src='https://use.fontawesome.com/releases/v5.0.10/js/all.js'\n        integrity='sha384-slN8GvtUJGnv6ca26v8EzVaR9DC58QEwsIk9q1QXdCU8Yu8ck/tL/5szYlBbqmS+'\n        crossOrigin='anonymous'\n      />\n    </Helmet>\n    <Header />\n    <Main />\n    <Footer />\n  </div>\n)\n\nApp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(App)\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport injectSheet from 'react-jss'\n\nimport styles from './styles/global'\nimport App from './App'\n\nconst Router = () => (\n  <BrowserRouter\n    // If deploying to the subfolder '/langua', leave as-is.\n    // If deploying to a different subfolder, change the basename below accordingly.\n    // If deploying to the root of a site, remove the basename prop completely.\n    basename={'/langua'}\n  >\n    <App />\n  </BrowserRouter>\n)\n\nexport default injectSheet(styles)(Router)\n","import 'react-app-polyfill/ie9'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport registerServiceWorker from './registerServiceWorker'\nimport Router from './Router'\n\nconst rootElement = document.getElementById('root')\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(<Router />, rootElement)\n} else {\n  ReactDOM.render(<Router />, rootElement)\n}\n\nregisterServiceWorker()\n"],"sourceRoot":""}